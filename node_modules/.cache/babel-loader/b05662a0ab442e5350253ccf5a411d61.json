{"ast":null,"code":"import { loadUser, login, signup } from 'Services/auth.service';\nimport { AUTH_ERROR, LOGIN_SUCCESS, LOGOUT_SUCCESS, USER_LOADED } from 'Store/constants/auth.constant';\nimport { toggleLoader } from './common.action';\nimport { getMessage } from './message.action';\nexport const loadUserAction = () => async (dispatch, getState) => {\n  try {\n    const {\n      user\n    } = await loadUser();\n    dispatch(loaderUserActionSuccess({\n      user\n    }));\n  } catch (e) {\n    console.log('user load action error:', e.response.data);\n    dispatch(authError());\n  }\n};\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata);\n    dispatch(getMessage(response.data.message));\n    history.push('/login');\n  } catch (e) {\n    console.log('signup action error:', e);\n    dispatch(getMessage(e.response.data, e.response.status, 'REGISTER_FAIL'));\n    dispatch(authError());\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const {\n      user,\n      token\n    } = await login(userdata);\n    dispatch(loginActionSuccess({\n      user,\n      token\n    }));\n    history.push('/posts');\n  } catch (e) {\n    console.log('login action error:', e);\n    dispatch(getMessage(e.response.data, e.response.status, 'REGISTER_FAIL'));\n    dispatch(authError());\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginActionSuccess = userdata => ({\n  type: LOGIN_SUCCESS,\n  payload: userdata\n});\nexport const loaderUserActionSuccess = userdata => ({\n  type: USER_LOADED,\n  payload: userdata\n});\nexport const authError = () => ({\n  type: AUTH_ERROR\n});\nexport const logoutAction = history => {\n  history.push('/login');\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/actions/auth.action.js"],"names":["loadUser","login","signup","AUTH_ERROR","LOGIN_SUCCESS","LOGOUT_SUCCESS","USER_LOADED","toggleLoader","getMessage","loadUserAction","dispatch","getState","user","loaderUserActionSuccess","e","console","log","response","data","authError","signupAction","userdata","history","message","push","status","loginAction","token","loginActionSuccess","type","payload","logoutAction"],"mappings":"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","sourcesContent":["import { loadUser, login, signup } from 'Services/auth.service'\nimport { AUTH_ERROR, LOGIN_SUCCESS, LOGOUT_SUCCESS, USER_LOADED } from 'Store/constants/auth.constant'\nimport { toggleLoader } from './common.action'\nimport { getMessage } from './message.action'\n\nexport const loadUserAction = () => async (dispatch, getState) => {\n  try {\n    const { user } = await loadUser()\n    dispatch(loaderUserActionSuccess({ user }))\n  } catch (e) {\n    console.log('user load action error:', e.response.data)\n    dispatch(authError())\n  }\n}\n\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata)\n    dispatch(getMessage(response.data.message))\n\n    history.push('/login')\n  } catch (e) {\n    console.log('signup action error:', e)\n    dispatch(getMessage(e.response.data, e.response.status, 'REGISTER_FAIL'))\n    dispatch(authError())\n  }\n  dispatch(toggleLoader(false))\n}\n\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const { user, token } = await login(userdata)\n\n    dispatch(loginActionSuccess({ user, token }))\n    history.push('/posts')\n  } catch (e) {\n    console.log('login action error:', e)\n    dispatch(getMessage(e.response.data, e.response.status, 'REGISTER_FAIL'))\n    dispatch(authError())\n  }\n  dispatch(toggleLoader(false))\n}\n\nexport const loginActionSuccess = userdata => ({\n  type: LOGIN_SUCCESS,\n  payload: userdata,\n})\n\nexport const loaderUserActionSuccess = userdata => ({\n  type: USER_LOADED,\n  payload: userdata,\n})\n\nexport const authError = () => ({\n  type: AUTH_ERROR,\n})\n\nexport const logoutAction = history => {\n  history.push('/login')\n  return {\n    type: LOGOUT_SUCCESS,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}