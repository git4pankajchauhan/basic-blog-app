{"ast":null,"code":"import { DECREMENT, INCREMENT, RESET } from 'Store/constants/Counter.constant';\nconst initialState = {\n  counter: 0,\n  user: {\n    name: 'pankaj'\n  }\n};\nexport const CounterReducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return { ...state,\n      counter: state.counter + action.payload\n    };\n  }\n\n  if (action.type === DECREMENT) {\n    return { ...state,\n      counter: state.counter - 1\n    };\n  }\n\n  if (action.type === RESET) {\n    return { ...state,\n      counter: initialState.counter\n    };\n  }\n\n  return state;\n};\n_c = CounterReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterReducer\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/reducers/Counter.reducer.js"],"names":["DECREMENT","INCREMENT","RESET","initialState","counter","user","name","CounterReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,KAA/B,QAA4C,kCAA5C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF;AAFa,CAArB;AAOA,OAAO,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC9D,MAAIA,MAAM,CAACC,IAAP,KAAgBT,SAApB,EAA+B;AAC7B,WAAO,EACL,GAAGO,KADE;AAELJ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACE;AAF3B,KAAP;AAID;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgBV,SAApB,EAA+B;AAC7B,WAAO,EACL,GAAGQ,KADE;AAELJ,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,GAAgB;AAFpB,KAAP;AAID;;AAED,MAAIK,MAAM,CAACC,IAAP,KAAgBR,KAApB,EAA2B;AACzB,WAAO,EACL,GAAGM,KADE;AAELJ,MAAAA,OAAO,EAAED,YAAY,CAACC;AAFjB,KAAP;AAID;;AAED,SAAOI,KAAP;AACD,CAtBM;KAAMD,c","sourcesContent":["import { DECREMENT, INCREMENT, RESET } from 'Store/constants/Counter.constant';\n\nconst initialState = {\n  counter: 0,\n  user: {\n    name: 'pankaj',\n  },\n};\n\nexport const CounterReducer = (state = initialState, action) => {\n  if (action.type === INCREMENT) {\n    return {\n      ...state,\n      counter: state.counter + action.payload,\n    };\n  }\n  if (action.type === DECREMENT) {\n    return {\n      ...state,\n      counter: state.counter - 1,\n    };\n  }\n\n  if (action.type === RESET) {\n    return {\n      ...state,\n      counter: initialState.counter,\n    };\n  }\n\n  return state;\n};\n"]},"metadata":{},"sourceType":"module"}