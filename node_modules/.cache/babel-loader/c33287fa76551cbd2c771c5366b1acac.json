{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx\",\n    _s = $RefreshSig$();\n\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPostForm = props => {\n  _s();\n\n  const [post, setPost] = useState(props.post);\n  const dispatch = useDispatch(); //   const onCreatePost = e => {\n  //     e.preventDefault();\n  //     dispatch(updatePostAction(post, props.history));\n  //   };\n  //   const onAddPostChange = e => {\n  //     const { name, value } = e.target;\n  //     setPost(lastInput => ({\n  //       ...lastInput,\n  //       [name]: value,\n  //     }));\n  //   };\n  //   useEffect(() => {\n  //     dispatch(openDrawer());\n  //     console.log(post);\n  //   }, [props]);\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  return (\n    /*#__PURE__*/\n    // <CustomDrawer headTitle=\"Edit Post\">\n    //   <form onSubmit={onCreatePost}>\n    //     <CustomInput type=\"text\" name=\"title\" value={post.title} onChange={onAddPostChange} placeholder=\"Enter Title\" />\n    //     <CustomInput type=\"text\" name=\"subTitle\" value={post.subTitle} onChange={onAddPostChange} placeholder=\"Enter Sub Title\" />\n    //     <CustomInput type=\"text\" name=\"tags\" value={post.tags} onChange={onAddPostChange} placeholder=\"Enter Tags\" />\n    //     <CustomTextArea type=\"text\" name=\"description\" value={post.description} onChange={onAddPostChange} placeholder=\"Enter Description\" />\n    //     <CustomButton color={color.success}>Submit</CustomButton>\n    //   </form>\n    // </CustomDrawer>\n    _jsxDEV(\"h1\", {\n      children: \"aa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(EditPostForm, \"6+frysIRvsrAWTqmRU7VqjQgf/s=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditPostForm;\n\nconst mapStateToProps = state => {\n  const post = getPost();\n  return (state, props) => {\n    return {\n      post: post(state, props.match.params.id)\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(EditPostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx"],"names":["color","CustomButton","CustomDrawer","CustomInput","CustomTextArea","React","useEffect","useState","connect","useDispatch","openDrawer","updatePostAction","getPost","EditPostForm","props","post","setPost","dispatch","effect","cleanup","input","mapStateToProps","state","match","params","id"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,8BAA5C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,OAAT,QAAwB,gCAAxB;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACO,KAAK,CAACC,IAAP,CAAhC;AAEA,QAAME,QAAQ,GAAGR,WAAW,EAA5B,CAH4B,CAK5B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,MAAM;AACN,WAAO,MAAM;AACXC,MAAAA,OAAO;AACR,KAFD;AAGD,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAOA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAYD,CA1CD;;GAAMP,Y;UAGaJ,W;;;KAHbI,Y;;AA4CN,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMP,IAAI,GAAGH,OAAO,EAApB;AACA,SAAO,CAACU,KAAD,EAAQR,KAAR,KAAkB;AACvB,WAAO;AACLC,MAAAA,IAAI,EAAEA,IAAI,CAACO,KAAD,EAAQR,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBC,EAA3B;AADL,KAAP;AAGD,GAJD;AAKD,CAPD;;AASA,eAAejB,OAAO,CAACa,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\n\nconst EditPostForm = props => {\n  const [post, setPost] = useState(props.post);\n\n  const dispatch = useDispatch();\n\n  //   const onCreatePost = e => {\n  //     e.preventDefault();\n  //     dispatch(updatePostAction(post, props.history));\n  //   };\n\n  //   const onAddPostChange = e => {\n  //     const { name, value } = e.target;\n  //     setPost(lastInput => ({\n  //       ...lastInput,\n  //       [name]: value,\n  //     }));\n  //   };\n\n  //   useEffect(() => {\n  //     dispatch(openDrawer());\n  //     console.log(post);\n  //   }, [props]);\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  return (\n    // <CustomDrawer headTitle=\"Edit Post\">\n    //   <form onSubmit={onCreatePost}>\n    //     <CustomInput type=\"text\" name=\"title\" value={post.title} onChange={onAddPostChange} placeholder=\"Enter Title\" />\n    //     <CustomInput type=\"text\" name=\"subTitle\" value={post.subTitle} onChange={onAddPostChange} placeholder=\"Enter Sub Title\" />\n    //     <CustomInput type=\"text\" name=\"tags\" value={post.tags} onChange={onAddPostChange} placeholder=\"Enter Tags\" />\n    //     <CustomTextArea type=\"text\" name=\"description\" value={post.description} onChange={onAddPostChange} placeholder=\"Enter Description\" />\n    //     <CustomButton color={color.success}>Submit</CustomButton>\n    //   </form>\n    // </CustomDrawer>\n    <h1>aa</h1>\n  );\n};\n\nconst mapStateToProps = state => {\n  const post = getPost();\n  return (state, props) => {\n    return {\n      post: post(state, props.match.params.id),\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(EditPostForm);\n"]},"metadata":{},"sourceType":"module"}