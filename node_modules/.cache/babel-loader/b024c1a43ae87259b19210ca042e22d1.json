{"ast":null,"code":"import { signup } from 'Services/auth.service';\nimport { SIGNUP_CONFIRMED_ACTION } from 'Store/constants/auth.constant';\nimport { errorMessage, successMessage } from './common.action';\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata);\n\n    if (response.data.status) {\n      dispatch(successMessage(response.data.message));\n      setTimeout(() => {\n        history.push('/login');\n      }, 5000);\n    } else {\n      dispatch(errorMessage(response.data.message));\n    }\n  } catch (error) {\n    console.log('signup action error:', error);\n    dispatch(errorMessage('Oops! Something went wrong.'));\n  }\n};\nexport const confirmedSignupAction = payload => ({\n  type: SIGNUP_CONFIRMED_ACTION,\n  payload\n}); // export function signupFailedAction(message) {\n//   return {\n//     type: SIGNUP_FAILED_ACTION,\n//     payload: message,\n//   }\n// }\n// export function logout(history) {\n//   localStorage.removeItem('userDetails')\n//   history.push('/login')\n//   return {\n//     type: LOGOUT_ACTION,\n//   }\n// }\n// export function loginAction(email, password, history) {\n//   return dispatch => {\n//     login(email, password)\n//       .then(response => {\n//         saveTokenInLocalStorage(response.data)\n//         runLogoutTimer(dispatch, response.data.expiresIn * 1000, history)\n//         dispatch(loginConfirmedAction(response.data))\n//         history.push('/')\n//       })\n//       .catch(error => {\n//         const errorMessage = formatError(error.response.data)\n//         dispatch(loginFailedAction(errorMessage))\n//       })\n//   }\n// }\n// export function loginFailedAction(data) {\n//   return {\n//     type: LOGIN_FAILED_ACTION,\n//     payload: data,\n//   }\n// }\n// export function loginConfirmedAction(data) {\n//   return {\n//     type: LOGIN_CONFIRMED_ACTION,\n//     payload: data,\n//   }\n// }\n// export function loadingToggleAction(status) {\n//   return {\n//     type: LOADING_TOGGLE_ACTION,\n//     payload: status,\n//   }\n// }","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/actions/auth.action.js"],"names":["signup","SIGNUP_CONFIRMED_ACTION","errorMessage","successMessage","signupAction","userdata","history","dispatch","response","data","status","message","setTimeout","push","error","console","log","confirmedSignupAction","payload","type"],"mappings":"AAAA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,uBAAT,QAAwC,+BAAxC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,iBAA7C;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AACnE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACK,QAAD,CAA7B;;AAEA,QAAIG,QAAQ,CAACC,IAAT,CAAcC,MAAlB,EAA0B;AACxBH,MAAAA,QAAQ,CAACJ,cAAc,CAACK,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAf,CAAR;AACAC,MAAAA,UAAU,CAAC,MAAM;AACfN,QAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KALD,MAKO;AACLN,MAAAA,QAAQ,CAACL,YAAY,CAACM,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAb,CAAR;AACD;AACF,GAXD,CAWE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACAP,IAAAA,QAAQ,CAACL,YAAY,CAAC,6BAAD,CAAb,CAAR;AACD;AACF,CAhBM;AAkBP,OAAO,MAAMe,qBAAqB,GAAGC,OAAO,KAAK;AAC/CC,EAAAA,IAAI,EAAElB,uBADyC;AAE/CiB,EAAAA;AAF+C,CAAL,CAArC,C,CAKP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { signup } from 'Services/auth.service'\nimport { SIGNUP_CONFIRMED_ACTION } from 'Store/constants/auth.constant'\nimport { errorMessage, successMessage } from './common.action'\n\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata)\n\n    if (response.data.status) {\n      dispatch(successMessage(response.data.message))\n      setTimeout(() => {\n        history.push('/login')\n      }, 5000)\n    } else {\n      dispatch(errorMessage(response.data.message))\n    }\n  } catch (error) {\n    console.log('signup action error:', error)\n    dispatch(errorMessage('Oops! Something went wrong.'))\n  }\n}\n\nexport const confirmedSignupAction = payload => ({\n  type: SIGNUP_CONFIRMED_ACTION,\n  payload,\n})\n\n// export function signupFailedAction(message) {\n//   return {\n//     type: SIGNUP_FAILED_ACTION,\n//     payload: message,\n//   }\n// }\n\n// export function logout(history) {\n//   localStorage.removeItem('userDetails')\n//   history.push('/login')\n//   return {\n//     type: LOGOUT_ACTION,\n//   }\n// }\n\n// export function loginAction(email, password, history) {\n//   return dispatch => {\n//     login(email, password)\n//       .then(response => {\n//         saveTokenInLocalStorage(response.data)\n//         runLogoutTimer(dispatch, response.data.expiresIn * 1000, history)\n//         dispatch(loginConfirmedAction(response.data))\n//         history.push('/')\n//       })\n//       .catch(error => {\n//         const errorMessage = formatError(error.response.data)\n//         dispatch(loginFailedAction(errorMessage))\n//       })\n//   }\n// }\n\n// export function loginFailedAction(data) {\n//   return {\n//     type: LOGIN_FAILED_ACTION,\n//     payload: data,\n//   }\n// }\n\n// export function loginConfirmedAction(data) {\n//   return {\n//     type: LOGIN_CONFIRMED_ACTION,\n//     payload: data,\n//   }\n// }\n\n// export function loadingToggleAction(status) {\n//   return {\n//     type: LOADING_TOGGLE_ACTION,\n//     payload: status,\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}