{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { Add } from '@material-ui/icons';\nimport CustomButton from 'Components/Button/CustomButton';\nimport Post from 'Components/Post/Post';\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { getPostActionByTag, getPostsAction } from 'Store/actions/post.action';\nimport './Post.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePostForm = /*#__PURE__*/lazy(_c = () => import('Components/Post/CreatePostForm'));\n_c2 = CreatePostForm;\nconst EditPostForm = /*#__PURE__*/lazy(_c3 = () => import('Components/Post/EditPostForm'));\n_c4 = EditPostForm;\n\nconst Posts = props => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const [post, setPost] = useState(null);\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n\n  const onSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const onOpenCreatePost = () => {\n    dispatch(openDrawer('CREATE_POST'));\n  };\n\n  const onPostEditClick = id => {\n    dispatch(openDrawer('EDIT_POST'));\n    setPost(posts.find(post => post._id === id));\n  };\n\n  useEffect(() => {\n    if (search) {\n      dispatch(getPostActionByTag(search));\n    } else {\n      dispatch(getPostsAction());\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"filter-post\",\n          placeholder: \"Search by tags...\",\n          onChange: onSearch,\n          value: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          className: \"add-post-btn\",\n          onClick: onOpenCreatePost,\n          children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), \" Create New Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Suspense, {\n          fallback: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Post, { ...post,\n            history: props.history,\n            onPostEditClick: onPostEditClick\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(CreatePostForm, {\n        id: \"CREATE_POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 27\n      }, this),\n      children: post && /*#__PURE__*/_jsxDEV(EditPostForm, {\n        id: \"EDIT_POST\",\n        post: { ...post\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"vlCP0zI6n1pnqSkHLiNOlpCZuDA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c5 = Posts;\nexport default Posts;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"CreatePostForm$lazy\");\n$RefreshReg$(_c2, \"CreatePostForm\");\n$RefreshReg$(_c3, \"EditPostForm$lazy\");\n$RefreshReg$(_c4, \"EditPostForm\");\n$RefreshReg$(_c5, \"Posts\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx"],"names":["Add","CustomButton","Post","React","lazy","Suspense","useEffect","useState","useDispatch","useSelector","openDrawer","getPostActionByTag","getPostsAction","CreatePostForm","EditPostForm","Posts","props","search","setSearch","post","setPost","dispatch","posts","state","onSearch","e","target","value","onOpenCreatePost","onPostEditClick","id","find","_id","map","history"],"mappings":"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","sourcesContent":["import { Add } from '@material-ui/icons'\nimport CustomButton from 'Components/Button/CustomButton'\nimport Post from 'Components/Post/Post'\nimport React, { lazy, Suspense, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { openDrawer } from 'Store/actions/common.action'\nimport { getPostActionByTag, getPostsAction } from 'Store/actions/post.action'\nimport './Post.style.scss'\nconst CreatePostForm = lazy(() => import('Components/Post/CreatePostForm'))\nconst EditPostForm = lazy(() => import('Components/Post/EditPostForm'))\n\nconst Posts = props => {\n  const [search, setSearch] = useState('')\n  const [post, setPost] = useState(null)\n\n  const dispatch = useDispatch()\n  const posts = useSelector(state => state.posts.posts)\n\n  const onSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const onOpenCreatePost = () => {\n    dispatch(openDrawer('CREATE_POST'))\n  }\n  const onPostEditClick = id => {\n    dispatch(openDrawer('EDIT_POST'))\n    setPost(posts.find(post => post._id === id))\n  }\n\n  useEffect(() => {\n    if (search) {\n      dispatch(getPostActionByTag(search))\n    } else {\n      dispatch(getPostsAction())\n    }\n  }, [search])\n\n  return (\n    <section className='post-section'>\n      <div className='body'>\n        <div className='filter-wrap'>\n          <input type='text' className='filter-post' placeholder='Search by tags...' onChange={onSearch} value={search} />\n          <CustomButton className='add-post-btn' onClick={onOpenCreatePost}>\n            <Add /> Create New Post\n          </CustomButton>\n        </div>\n        <div className='post-container'>\n          {posts.map(post => (\n            <Suspense fallback={<h1>Loading</h1>}>\n              <Post key={post._id} {...post} history={props.history} onPostEditClick={onPostEditClick} />\n            </Suspense>\n          ))}\n        </div>\n      </div>\n      <Suspense fallback={<h1>Loading</h1>}>\n        <CreatePostForm id='CREATE_POST' />\n      </Suspense>\n      <Suspense fallback={<h1>Loading</h1>}>{post && <EditPostForm id='EDIT_POST' post={{ ...post }} />}</Suspense>\n    </section>\n  )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}