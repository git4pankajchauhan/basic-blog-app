{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { Add } from '@material-ui/icons';\nimport { color } from 'Assets/Style/themes';\nimport Axios from 'axios';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport Post from 'Components/Post/Post';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Style/Post.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [addPost, setAddPost] = useState({\n    title: '',\n    sub_title: '',\n    tags: '',\n    content: ''\n  });\n\n  const inputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAddPost(preVal => {\n      return { ...preVal,\n        [name]: value\n      };\n    });\n  };\n\n  const formSubmit = async e => {\n    e.preventDefault();\n    const result = await Axios.post('http://localhost:5000/post', addPost);\n\n    if (result.data.status) {\n      postsData('');\n      setMessage(result.data.message);\n      setIsOpen(false);\n      setTimeout(() => {\n        setMessage(false);\n      }, 3000);\n    } else {\n      setMessage(result.data.message);\n    }\n  };\n  /* Fetch posts From API */\n\n\n  const postsData = async search => {\n    const postdata = await Axios.get(`http://localhost:5000/post/${search}`);\n    setPosts(postdata.data);\n  };\n\n  useEffect(() => {\n    postsData(search);\n  }, [search]);\n\n  function getPosts() {\n    if (!posts) return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"filter-post\",\n          onChange: e => setSearch(e.target.value),\n          value: search,\n          placeholder: \"Search by tags...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: e => setIsOpen(!isOpen),\n          children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), \"Create New Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomDrawer, {\n          headTitle: \"Add New Post\",\n          isOpen: isOpen,\n          closeHandle: e => setIsOpen(!isOpen),\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: formSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n              type: \"text\",\n              name: \"title\",\n              onChange: inputChange,\n              placeholder: \"Enter Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              type: \"text\",\n              name: \"sub_title\",\n              onChange: inputChange,\n              placeholder: \"Enter Sub Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              type: \"text\",\n              name: \"tags\",\n              onChange: inputChange,\n              placeholder: \"Enter Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CustomTextArea, {\n              type: \"text\",\n              name: \"content\",\n              onChange: inputChange,\n              placeholder: \"Enter Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n              color: color.success,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: !posts.length ? /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Post Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : posts.map(item => {\n          return /*#__PURE__*/_jsxDEV(Post, {\n            getPost: postsData,\n            id: item._id,\n            tags: item.tags,\n            sub_title: item.sub_title,\n            title: item.title,\n            content: item.content\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"UiCdBaXK8snCF9azry047iaqV6o=\");\n\n_c = Posts;\nexport default _c2 = withRouter(Posts);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Posts\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx"],"names":["Add","color","Axios","CustomButton","CustomDrawer","CustomInput","CustomTextArea","Post","React","useEffect","useState","withRouter","Posts","posts","setPosts","search","setSearch","isOpen","setIsOpen","message","setMessage","addPost","setAddPost","title","sub_title","tags","content","inputChange","e","name","value","target","preVal","formSubmit","preventDefault","result","post","data","status","postsData","setTimeout","postdata","get","getPosts","success","length","map","item","_id"],"mappings":"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","sourcesContent":["import { Add } from '@material-ui/icons';\nimport { color } from 'Assets/Style/themes';\nimport Axios from 'axios';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport Post from 'Components/Post/Post';\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Style/Post.scss';\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n  const [search, setSearch] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n\n  const [message, setMessage] = useState('');\n  const [addPost, setAddPost] = useState({\n    title: '',\n    sub_title: '',\n    tags: '',\n    content: '',\n  });\n\n  const inputChange = e => {\n    const { name, value } = e.target;\n    setAddPost(preVal => {\n      return {\n        ...preVal,\n        [name]: value,\n      };\n    });\n  };\n\n  const formSubmit = async e => {\n    e.preventDefault();\n    const result = await Axios.post('http://localhost:5000/post', addPost);\n    if (result.data.status) {\n      postsData('');\n      setMessage(result.data.message);\n      setIsOpen(false);\n      setTimeout(() => {\n        setMessage(false);\n      }, 3000);\n    } else {\n      setMessage(result.data.message);\n    }\n  };\n\n  /* Fetch posts From API */\n  const postsData = async search => {\n    const postdata = await Axios.get(`http://localhost:5000/post/${search}`);\n    setPosts(postdata.data);\n  };\n  useEffect(() => {\n    postsData(search);\n  }, [search]);\n\n  function getPosts() {\n    if (!posts) return null;\n  }\n\n  return (\n    <section className=\"post-section\">\n      <div className=\"body\">\n        <div className=\"filter-wrap\">\n          <input type=\"text\" className=\"filter-post\" onChange={e => setSearch(e.target.value)} value={search} placeholder=\"Search by tags...\" />\n\n          <CustomButton onClick={e => setIsOpen(!isOpen)}>\n            <Add />\n            Create New Post\n          </CustomButton>\n\n          <CustomDrawer headTitle=\"Add New Post\" isOpen={isOpen} closeHandle={e => setIsOpen(!isOpen)}>\n            <form onSubmit={formSubmit}>\n              <CustomInput type=\"text\" name=\"title\" onChange={inputChange} placeholder=\"Enter Title\" />\n              <CustomInput type=\"text\" name=\"sub_title\" onChange={inputChange} placeholder=\"Enter Sub Title\" />\n              <CustomInput type=\"text\" name=\"tags\" onChange={inputChange} placeholder=\"Enter Tags\" />\n              <CustomTextArea type=\"text\" name=\"content\" onChange={inputChange} placeholder=\"Enter Content\" />\n              {message && <div className=\"message\">{message}</div>}\n              <CustomButton color={color.success}>Submit</CustomButton>\n            </form>\n          </CustomDrawer>\n        </div>\n        <div className=\"post-container\">\n          {!posts.length ? (\n            <h2>No Post Found</h2>\n          ) : (\n            posts.map(item => {\n              return <Post getPost={postsData} key={item._id} id={item._id} tags={item.tags} sub_title={item.sub_title} title={item.title} content={item.content} />;\n            })\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default withRouter(Posts);\n"]},"metadata":{},"sourceType":"module"}