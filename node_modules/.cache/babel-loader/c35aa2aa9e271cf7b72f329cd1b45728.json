{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport Loader from 'Components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { getSeletedPostAction, removeSeletedPostAction } from 'Store/actions/post.action';\nimport '../../Components/Post/Post.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const post = useSelector(state => state.posts.post);\n  useEffect(() => {\n    if (post._id !== id) {\n      dispatch(getSeletedPostAction(id));\n    } // return () => {\n    //   dispatch(removeSeletedPostAction())\n    // }\n\n  }, [post]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !post ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"spost-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tags\",\n            children: post.tags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"title\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sub-title\",\n            children: post.subTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"description\",\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            color: color.primary,\n            onClick: () => {\n              props.history.push('/posts');\n            },\n            children: \"Go Back To Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(SinglePost, \"Cu3rq/9QGLeT8+ln8KPMPgnJKtk=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/SinglePost.jsx"],"names":["color","CustomButton","Loader","React","useEffect","useDispatch","useSelector","useParams","getSeletedPostAction","removeSeletedPostAction","SinglePost","props","dispatch","id","post","state","posts","_id","tags","title","subTitle","description","primary","history","push"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,oBAAT,EAA+BC,uBAA/B,QAA8D,2BAA9D;AACA,OAAO,iCAAP;;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASN,SAAS,EAAxB;AACA,QAAMO,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,IAAtB,CAAxB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,IAAI,CAACG,GAAL,KAAaJ,EAAjB,EAAqB;AACnBD,MAAAA,QAAQ,CAACJ,oBAAoB,CAACK,EAAD,CAArB,CAAR;AACD,KAHa,CAId;AACA;AACA;;AACD,GAPQ,EAON,CAACC,IAAD,CAPM,CAAT;AASA,sBACE;AAAA,cACG,CAACA,IAAD,gBACC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAS,MAAA,SAAS,EAAC,eAAnB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBAAwBA,IAAI,CAACI;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA,sBAAuBJ,IAAI,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BL,IAAI,CAACM;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA,sBAA4BN,IAAI,CAACO;AAAjC;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,YAAD;AACE,YAAA,KAAK,EAAErB,KAAK,CAACsB,OADf;AAEE,YAAA,OAAO,EAAE,MAAM;AACbX,cAAAA,KAAK,CAACY,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD,aAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AAyBD,CAvCD;;GAAMd,U;UACaL,W,EACFE,S,EACFD,W;;;KAHTI,U;AAyCN,eAAeA,UAAf","sourcesContent":["import { color } from 'Assets/Style/themes'\nimport CustomButton from 'Components/Button/CustomButton'\nimport Loader from 'Components/Loader/Loader'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useParams } from 'react-router'\nimport { getSeletedPostAction, removeSeletedPostAction } from 'Store/actions/post.action'\nimport '../../Components/Post/Post.scss'\n\nconst SinglePost = props => {\n  const dispatch = useDispatch()\n  const { id } = useParams()\n  const post = useSelector(state => state.posts.post)\n\n  useEffect(() => {\n    if (post._id !== id) {\n      dispatch(getSeletedPostAction(id))\n    }\n    // return () => {\n    //   dispatch(removeSeletedPostAction())\n    // }\n  }, [post])\n\n  return (\n    <>\n      {!post ? (\n        <Loader />\n      ) : (\n        <section className='spost-section'>\n          <div className='post-box'>\n            <div className='post-info'>\n              <span className='tags'>{post.tags}</span>\n              <h2 className='title'>{post.title}</h2>\n              <p className='sub-title'>{post.subTitle}</p>\n              <p className='description'>{post.description}</p>\n              <CustomButton\n                color={color.primary}\n                onClick={() => {\n                  props.history.push('/posts')\n                }}>\n                Go Back To Post\n              </CustomButton>\n            </div>\n          </div>\n        </section>\n      )}\n    </>\n  )\n}\n\nexport default SinglePost\n"]},"metadata":{},"sourceType":"module"}