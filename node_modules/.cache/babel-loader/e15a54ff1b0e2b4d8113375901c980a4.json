{"ast":null,"code":"import { login, saveTokenInLocalStorage, signup } from 'Services/auth.service';\nimport { LOGIN_CONFIRMED_ACTION, LOGOUT_ACTION } from 'Store/constants/auth.constant';\nimport { errorMessage, successMessage, toggleLoader } from './common.action';\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata);\n\n    if (response.data.status) {\n      dispatch(successMessage(response.data.message));\n      history.push('/login');\n    } else {\n      dispatch(errorMessage(response.data.message));\n    }\n  } catch (error) {\n    console.log('signup action error:', error);\n    dispatch(errorMessage('Oops! Something went wrong.'));\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await login(userdata);\n    console.log(response.data);\n\n    if (response.data.status) {\n      const {\n        isAuth,\n        token,\n        user\n      } = response.data;\n      saveTokenInLocalStorage({\n        isAuth,\n        token,\n        user\n      }); // runLogoutTimer(dispatch, response.data.expiresIn * 1000, history)\n      // dispatch(loginConfirmedAction({ isAuth, token, user }))\n      // history.push('/posts')\n    } else {\n      dispatch(errorMessage(response.data.message));\n    }\n  } catch (error) {\n    console.log('login action error:', error);\n    dispatch(errorMessage('Oops! Something went wrong.'));\n  }\n\n  dispatch(toggleLoader(false));\n}; // export function loginConfirmedAction(data) {\n//   return {\n//     type: LOGIN_CONFIRMED_ACTION,\n//     payload: data,\n//   }\n// }\n// export function logout(history) {\n//   localStorage.removeItem('userToken')\n//   history.push('/login')\n//   return {\n//     type: LOGOUT_ACTION,\n//   }\n// }","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/actions/auth.action.js"],"names":["login","saveTokenInLocalStorage","signup","LOGIN_CONFIRMED_ACTION","LOGOUT_ACTION","errorMessage","successMessage","toggleLoader","signupAction","userdata","history","dispatch","response","data","status","message","push","error","console","log","loginAction","isAuth","token","user"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,uBAAhB,EAAyCC,MAAzC,QAAuD,uBAAvD;AACA,SAASC,sBAAT,EAAiCC,aAAjC,QAAsD,+BAAtD;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,YAAvC,QAA2D,iBAA3D;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AACnE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACO,QAAD,CAA7B;;AAEA,QAAIG,QAAQ,CAACC,IAAT,CAAcC,MAAlB,EAA0B;AACxBH,MAAAA,QAAQ,CAACL,cAAc,CAACM,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAf,CAAR;AACAL,MAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACD,KAHD,MAGO;AACLL,MAAAA,QAAQ,CAACN,YAAY,CAACO,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAb,CAAR;AACD;AACF,GATD,CASE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACAN,IAAAA,QAAQ,CAACN,YAAY,CAAC,6BAAD,CAAb,CAAR;AACD;;AAEDM,EAAAA,QAAQ,CAACJ,YAAY,CAAC,KAAD,CAAb,CAAR;AACD,CAhBM;AAiBP,OAAO,MAAMa,WAAW,GAAG,CAACX,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AAClE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACS,QAAD,CAA5B;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAQ,CAACC,IAArB;;AACA,QAAID,QAAQ,CAACC,IAAT,CAAcC,MAAlB,EAA0B;AACxB,YAAM;AAAEO,QAAAA,MAAF;AAAUC,QAAAA,KAAV;AAAiBC,QAAAA;AAAjB,UAA0BX,QAAQ,CAACC,IAAzC;AAEAZ,MAAAA,uBAAuB,CAAC;AAAEoB,QAAAA,MAAF;AAAUC,QAAAA,KAAV;AAAiBC,QAAAA;AAAjB,OAAD,CAAvB,CAHwB,CAIxB;AACA;AACA;AACD,KAPD,MAOO;AACLZ,MAAAA,QAAQ,CAACN,YAAY,CAACO,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAb,CAAR;AACD;AACF,GAbD,CAaE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACAN,IAAAA,QAAQ,CAACN,YAAY,CAAC,6BAAD,CAAb,CAAR;AACD;;AAEDM,EAAAA,QAAQ,CAACJ,YAAY,CAAC,KAAD,CAAb,CAAR;AACD,CApBM,C,CAsBP;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { login, saveTokenInLocalStorage, signup } from 'Services/auth.service'\nimport { LOGIN_CONFIRMED_ACTION, LOGOUT_ACTION } from 'Store/constants/auth.constant'\nimport { errorMessage, successMessage, toggleLoader } from './common.action'\n\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata)\n\n    if (response.data.status) {\n      dispatch(successMessage(response.data.message))\n      history.push('/login')\n    } else {\n      dispatch(errorMessage(response.data.message))\n    }\n  } catch (error) {\n    console.log('signup action error:', error)\n    dispatch(errorMessage('Oops! Something went wrong.'))\n  }\n\n  dispatch(toggleLoader(false))\n}\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await login(userdata)\n    console.log(response.data)\n    if (response.data.status) {\n      const { isAuth, token, user } = response.data\n\n      saveTokenInLocalStorage({ isAuth, token, user })\n      // runLogoutTimer(dispatch, response.data.expiresIn * 1000, history)\n      // dispatch(loginConfirmedAction({ isAuth, token, user }))\n      // history.push('/posts')\n    } else {\n      dispatch(errorMessage(response.data.message))\n    }\n  } catch (error) {\n    console.log('login action error:', error)\n    dispatch(errorMessage('Oops! Something went wrong.'))\n  }\n\n  dispatch(toggleLoader(false))\n}\n\n// export function loginConfirmedAction(data) {\n//   return {\n//     type: LOGIN_CONFIRMED_ACTION,\n//     payload: data,\n//   }\n// }\n\n// export function logout(history) {\n//   localStorage.removeItem('userToken')\n//   history.push('/login')\n//   return {\n//     type: LOGOUT_ACTION,\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}