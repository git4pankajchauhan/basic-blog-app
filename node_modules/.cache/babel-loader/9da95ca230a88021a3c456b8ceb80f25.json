{"ast":null,"code":"import { loadUser, login, signup } from 'Services/auth.service';\nimport { AUTH_ERROR, LOGIN_SUCCESS, LOGOUT_SUCCESS, USER_LOADED } from 'Store/constants/auth.constant';\nimport { errorMessage, successMessage, toggleLoader } from './common.action';\nexport const loadUserAction = () => async (dispatch, getState) => {\n  try {\n    const {\n      user\n    } = await loadUser();\n    dispatch(loaderUserActionSuccess({\n      user\n    }));\n    history.push('/posts');\n  } catch (e) {\n    console.log('user load action error:', e);\n    dispatch(authError());\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata);\n    dispatch(successMessage(response.data.message));\n    history.push('/login');\n  } catch (e) {\n    console.log('signup action error:', e);\n    dispatch(errorMessage(e.message));\n    dispatch(authError());\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const {\n      user,\n      token\n    } = await login(userdata);\n    dispatch(loginActionSuccess({\n      user,\n      token\n    }));\n    history.push('/posts');\n  } catch (e) {\n    console.log('login action error:', e);\n    dispatch(errorMessage(e.message));\n    dispatch(authError());\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginActionSuccess = userdata => ({\n  type: LOGIN_SUCCESS,\n  payload: userdata\n});\nexport const loaderUserActionSuccess = userdata => ({\n  type: USER_LOADED,\n  payload: userdata\n});\nexport const authError = () => ({\n  type: AUTH_ERROR\n});\nexport const logoutAction = history => {\n  history.push('/login');\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/actions/auth.action.js"],"names":["loadUser","login","signup","AUTH_ERROR","LOGIN_SUCCESS","LOGOUT_SUCCESS","USER_LOADED","errorMessage","successMessage","toggleLoader","loadUserAction","dispatch","getState","user","loaderUserActionSuccess","history","push","e","console","log","authError","signupAction","userdata","response","data","message","loginAction","token","loginActionSuccess","type","payload","logoutAction"],"mappings":"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","sourcesContent":["import { loadUser, login, signup } from 'Services/auth.service'\nimport { AUTH_ERROR, LOGIN_SUCCESS, LOGOUT_SUCCESS, USER_LOADED } from 'Store/constants/auth.constant'\nimport { errorMessage, successMessage, toggleLoader } from './common.action'\n\nexport const loadUserAction = () => async (dispatch, getState) => {\n  try {\n    const { user } = await loadUser()\n    dispatch(loaderUserActionSuccess({ user }))\n    history.push('/posts')\n  } catch (e) {\n    console.log('user load action error:', e)\n    dispatch(authError())\n  }\n  dispatch(toggleLoader(false))\n}\n\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata)\n    dispatch(successMessage(response.data.message))\n    history.push('/login')\n  } catch (e) {\n    console.log('signup action error:', e)\n    dispatch(errorMessage(e.message))\n    dispatch(authError())\n  }\n  dispatch(toggleLoader(false))\n}\n\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const { user, token } = await login(userdata)\n\n    dispatch(loginActionSuccess({ user, token }))\n    history.push('/posts')\n  } catch (e) {\n    console.log('login action error:', e)\n    dispatch(errorMessage(e.message))\n    dispatch(authError())\n  }\n  dispatch(toggleLoader(false))\n}\n\nexport const loginActionSuccess = userdata => ({\n  type: LOGIN_SUCCESS,\n  payload: userdata,\n})\n\nexport const loaderUserActionSuccess = userdata => ({\n  type: USER_LOADED,\n  payload: userdata,\n})\n\nexport const authError = () => ({\n  type: AUTH_ERROR,\n})\n\nexport const logoutAction = history => {\n  history.push('/login')\n  return {\n    type: LOGOUT_SUCCESS,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}