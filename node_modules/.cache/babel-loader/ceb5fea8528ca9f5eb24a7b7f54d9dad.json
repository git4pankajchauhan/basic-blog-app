{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { Add } from '@material-ui/icons';\nimport CreatePostForm from 'Components/Post/CreatePostForm';\nimport EditPostForm from 'Components/Post/EditPostForm ';\nimport Post from 'Components/Post/Post';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { getPostsAction, getPostActionByTag } from 'Store/actions/post.action';\nimport './Style/Post.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = ({\n  posts,\n  getPostsAction,\n  ...props\n}) => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getPostsAction();\n  }, []);\n\n  const onSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    if (search) {\n      dispatch(getPostActionByTag());\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"filter-post\",\n          placeholder: \"Search by tags...\",\n          onChange: onSearch,\n          value: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-dark\",\n          to: {\n            pathname: `/posts/create-post`\n          },\n          children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), \" Create New Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, { ...post,\n          history: props.history\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/create-post\",\n        exact: true,\n        component: CreatePostForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), posts.length && /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/edit/:id\",\n        exact: true,\n        component: EditPostForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"tu9RInKqRoXME5ZERjtDqOkcVOs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Posts;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.PostsReducer.posts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getPostsAction\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx"],"names":["Add","CreatePostForm","EditPostForm","Post","React","useEffect","useState","connect","useDispatch","Link","Route","Switch","bindActionCreators","getPostsAction","getPostActionByTag","Posts","posts","props","search","setSearch","dispatch","onSearch","e","target","value","pathname","map","post","history","_id","length","mapStateToProps","state","PostsReducer","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { Add } from '@material-ui/icons';\nimport CreatePostForm from 'Components/Post/CreatePostForm';\nimport EditPostForm from 'Components/Post/EditPostForm ';\nimport Post from 'Components/Post/Post';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport { getPostsAction, getPostActionByTag } from 'Store/actions/post.action';\nimport './Style/Post.scss';\n\nconst Posts = ({ posts, getPostsAction, ...props }) => {\n  const [search, setSearch] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getPostsAction();\n  }, []);\n\n  const onSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    if (search) {\n      dispatch(getPostActionByTag());\n    }\n  }, [search]);\n\n  return (\n    <section className=\"post-section\">\n      <div className=\"body\">\n        <div className=\"filter-wrap\">\n          <input type=\"text\" className=\"filter-post\" placeholder=\"Search by tags...\" onChange={onSearch} value={search} />\n          <Link className=\"text-dark\" to={{ pathname: `/posts/create-post` }}>\n            <Add /> Create New Post\n          </Link>\n        </div>\n        <div className=\"post-container\">\n          {posts.map(post => (\n            <Post key={post._id} {...post} history={props.history} />\n          ))}\n        </div>\n      </div>\n      <Switch>\n        <Route path=\"/posts/create-post\" exact component={CreatePostForm} />\n        {posts.length && <Route path=\"/posts/edit/:id\" exact component={EditPostForm} />}\n      </Switch>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.PostsReducer.posts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ getPostsAction }, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}