{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { Add } from '@material-ui/icons';\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport Post from 'Components/Post/Post';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { getPostsAction } from 'Store/actions/post.action';\nimport './Style/Post.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = ({\n  posts,\n  getPostsAction\n}) => {\n  _s();\n\n  const [post, setPost] = useState({\n    title: '',\n    subTitle: '',\n    tags: '',\n    description: ''\n  });\n  const dispatch = useDispatch();\n\n  const onCreatePost = e => {};\n\n  const onAddPostChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name); // setPost(lastInput => ({\n    //   ...lastInput,\n    //   [name]: [value],\n    // }));\n  };\n\n  useEffect(() => {\n    getPostsAction();\n  }, []);\n  useEffect(() => {\n    console.log(post);\n  }, [post]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"filter-post\",\n          placeholder: \"Search by tags...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          onClick: () => dispatch(openDrawer()),\n          children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), \"Create New Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, { ...post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomDrawer, {\n      headTitle: \"Add New Post\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onCreatePost,\n        children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"text\",\n          name: \"title\",\n          onChange: onAddPostChange,\n          placeholder: \"Enter Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"text\",\n          name: \"subTitle\",\n          onChange: onAddPostChange,\n          placeholder: \"Enter Sub Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"text\",\n          name: \"tags\",\n          onChange: onAddPostChange,\n          placeholder: \"Enter Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextArea, {\n          type: \"text\",\n          name: \"description\",\n          onChange: onAddPostChange,\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          color: color.success,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"W+H1Ob0k1BIBC/mKLnZSO2mlmkM=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Posts;\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.PostsReducer.posts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    getPostsAction\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx"],"names":["Add","color","CustomButton","CustomDrawer","CustomInput","CustomTextArea","Post","React","useEffect","useState","connect","useDispatch","bindActionCreators","openDrawer","getPostsAction","Posts","posts","post","setPost","title","subTitle","tags","description","dispatch","onCreatePost","e","onAddPostChange","name","value","target","console","log","map","_id","success","mapStateToProps","state","PostsReducer","mapDispatchToProps"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,8BAA5C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAO,mBAAP;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAD,KAA+B;AAAA;;AAC3C,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE,EAAvB;AAA2BC,IAAAA,IAAI,EAAE,EAAjC;AAAqCC,IAAAA,WAAW,EAAE;AAAlD,GAAD,CAAhC;AAEA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,YAAY,GAAGC,CAAC,IAAI,CAAE,CAA5B;;AAEA,QAAMC,eAAe,GAAGD,CAAC,IAAI;AAC3B,UAAM;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,CAAC,CAACI,MAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAF2B,CAG3B;AACA;AACA;AACA;AACD,GAPD;;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAIA,sBACE;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,aAA7B;AAA2C,UAAA,WAAW,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAE,MAAMM,QAAQ,CAACV,UAAU,EAAX,CAArC;AAAA,kCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACGG,KAAK,CAACgB,GAAN,CAAUf,IAAI,iBACb,QAAC,IAAD,OAAyBA;AAAzB,WAAWA,IAAI,CAACgB,GAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,cAAxB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAET,YAAhB;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,OAA9B;AAAsC,UAAA,QAAQ,EAAEE,eAAhD;AAAiE,UAAA,WAAW,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,UAA9B;AAAyC,UAAA,QAAQ,EAAEA,eAAnD;AAAoE,UAAA,WAAW,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,MAA9B;AAAqC,UAAA,QAAQ,EAAEA,eAA/C;AAAgE,UAAA,WAAW,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,cAAD;AAAgB,UAAA,IAAI,EAAC,MAArB;AAA4B,UAAA,IAAI,EAAC,aAAjC;AAA+C,UAAA,QAAQ,EAAEA,eAAzD;AAA0E,UAAA,WAAW,EAAC;AAAtF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEzB,KAAK,CAACiC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAnDD;;GAAMnB,K;UAGaJ,W;;;KAHbI,K;;AAqDN,MAAMoB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLpB,IAAAA,KAAK,EAAEoB,KAAK,CAACC,YAAN,CAAmBrB;AADrB,GAAP;AAGD,CAJD;;AAMA,MAAMsB,kBAAkB,GAAGf,QAAQ,IAAI;AACrC,SAAOX,kBAAkB,CAAC;AAAEE,IAAAA;AAAF,GAAD,EAAqBS,QAArB,CAAzB;AACD,CAFD;;AAGA,eAAeb,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CvB,KAA7C,CAAf","sourcesContent":["import { Add } from '@material-ui/icons';\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport Post from 'Components/Post/Post';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { getPostsAction } from 'Store/actions/post.action';\nimport './Style/Post.scss';\n\nconst Posts = ({ posts, getPostsAction }) => {\n  const [post, setPost] = useState({ title: '', subTitle: '', tags: '', description: '' });\n\n  const dispatch = useDispatch();\n  const onCreatePost = e => {};\n\n  const onAddPostChange = e => {\n    const { name, value } = e.target;\n    console.log(name);\n    // setPost(lastInput => ({\n    //   ...lastInput,\n    //   [name]: [value],\n    // }));\n  };\n\n  useEffect(() => {\n    getPostsAction();\n  }, []);\n\n  useEffect(() => {\n    console.log(post);\n  }, [post]);\n\n  return (\n    <section className=\"post-section\">\n      <div className=\"body\">\n        <div className=\"filter-wrap\">\n          <input type=\"text\" className=\"filter-post\" placeholder=\"Search by tags...\" />\n          <CustomButton onClick={() => dispatch(openDrawer())}>\n            <Add />\n            Create New Post\n          </CustomButton>\n        </div>\n        <div className=\"post-container\">\n          {posts.map(post => (\n            <Post key={post._id} {...post} />\n          ))}\n        </div>\n      </div>\n\n      <CustomDrawer headTitle=\"Add New Post\">\n        <form onSubmit={onCreatePost}>\n          <CustomInput type=\"text\" name=\"title\" onChange={onAddPostChange} placeholder=\"Enter Title\" />\n          <CustomInput type=\"text\" name=\"subTitle\" onChange={onAddPostChange} placeholder=\"Enter Sub Title\" />\n          <CustomInput type=\"text\" name=\"tags\" onChange={onAddPostChange} placeholder=\"Enter Tags\" />\n          <CustomTextArea type=\"text\" name=\"description\" onChange={onAddPostChange} placeholder=\"Enter Description\" />\n          <CustomButton color={color.success}>Submit</CustomButton>\n        </form>\n      </CustomDrawer>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.PostsReducer.posts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ getPostsAction }, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n"]},"metadata":{},"sourceType":"module"}