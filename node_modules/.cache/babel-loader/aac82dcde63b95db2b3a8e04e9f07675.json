{"ast":null,"code":"import { login, signup } from 'Services/auth.service';\nimport { AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT_SUCCESS } from 'Store/constants/auth.constant';\nimport { errorMessage, successMessage, toggleLoader } from './common.action';\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata);\n    dispatch(successMessage(response.data.message));\n    history.push('/login');\n  } catch (e) {\n    console.log('signup action error:', e);\n    dispatch(errorMessage(e.message));\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const {\n      user,\n      token\n    } = await login(userdata);\n    dispatch(loginActionSuccess({\n      user,\n      token\n    }));\n  } catch (e) {\n    console.log('login action error:', e);\n    dispatch(errorMessage(e.message));\n    dispatch(loginActionFail());\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginActionSuccess = userdata => ({\n  type: LOGIN_SUCCESS,\n  payload: userdata\n});\nexport const loginActionFail = () => ({\n  type: LOGIN_FAIL\n});\nexport const authFail = () => ({\n  type: AUTH_ERROR\n});\nexport const logoutAction = history => {\n  history.push('/login');\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/actions/auth.action.js"],"names":["login","signup","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT_SUCCESS","errorMessage","successMessage","toggleLoader","signupAction","userdata","history","dispatch","response","data","message","push","e","console","log","loginAction","user","token","loginActionSuccess","loginActionFail","type","payload","authFail","logoutAction"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,aAAjC,EAAgDC,cAAhD,QAAsE,+BAAtE;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,YAAvC,QAA2D,iBAA3D;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AACnE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMZ,MAAM,CAACS,QAAD,CAA7B;AACAE,IAAAA,QAAQ,CAACL,cAAc,CAACM,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAf,CAAR;AACAJ,IAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACD,GAJD,CAIE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,CAApC;AACAL,IAAAA,QAAQ,CAACN,YAAY,CAACW,CAAC,CAACF,OAAH,CAAb,CAAR;AACD;;AACDH,EAAAA,QAAQ,CAACJ,YAAY,CAAC,KAAD,CAAb,CAAR;AACD,CAVM;AAYP,OAAO,MAAMY,WAAW,GAAG,CAACV,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AAClE,MAAI;AACF,UAAM;AAAES,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,MAAMtB,KAAK,CAACU,QAAD,CAAnC;AAEAE,IAAAA,QAAQ,CAACW,kBAAkB,CAAC;AAAEF,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,CAAnB,CAAR;AACD,GAJD,CAIE,OAAOL,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,CAAnC;AACAL,IAAAA,QAAQ,CAACN,YAAY,CAACW,CAAC,CAACF,OAAH,CAAb,CAAR;AACAH,IAAAA,QAAQ,CAACY,eAAe,EAAhB,CAAR;AACD;;AACDZ,EAAAA,QAAQ,CAACJ,YAAY,CAAC,KAAD,CAAb,CAAR;AACD,CAXM;AAaP,OAAO,MAAMe,kBAAkB,GAAGb,QAAQ,KAAK;AAC7Ce,EAAAA,IAAI,EAAErB,aADuC;AAE7CsB,EAAAA,OAAO,EAAEhB;AAFoC,CAAL,CAAnC;AAKP,OAAO,MAAMc,eAAe,GAAG,OAAO;AACpCC,EAAAA,IAAI,EAAEtB;AAD8B,CAAP,CAAxB;AAIP,OAAO,MAAMwB,QAAQ,GAAG,OAAO;AAC7BF,EAAAA,IAAI,EAAEvB;AADuB,CAAP,CAAjB;AAIP,OAAO,MAAM0B,YAAY,GAAGjB,OAAO,IAAI;AACrCA,EAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACA,SAAO;AACLS,IAAAA,IAAI,EAAEpB;AADD,GAAP;AAGD,CALM","sourcesContent":["import { login, signup } from 'Services/auth.service'\nimport { AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT_SUCCESS } from 'Store/constants/auth.constant'\nimport { errorMessage, successMessage, toggleLoader } from './common.action'\n\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata)\n    dispatch(successMessage(response.data.message))\n    history.push('/login')\n  } catch (e) {\n    console.log('signup action error:', e)\n    dispatch(errorMessage(e.message))\n  }\n  dispatch(toggleLoader(false))\n}\n\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const { user, token } = await login(userdata)\n\n    dispatch(loginActionSuccess({ user, token }))\n  } catch (e) {\n    console.log('login action error:', e)\n    dispatch(errorMessage(e.message))\n    dispatch(loginActionFail())\n  }\n  dispatch(toggleLoader(false))\n}\n\nexport const loginActionSuccess = userdata => ({\n  type: LOGIN_SUCCESS,\n  payload: userdata,\n})\n\nexport const loginActionFail = () => ({\n  type: LOGIN_FAIL,\n})\n\nexport const authFail = () => ({\n  type: AUTH_ERROR,\n})\n\nexport const logoutAction = history => {\n  history.push('/login')\n  return {\n    type: LOGOUT_SUCCESS,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}