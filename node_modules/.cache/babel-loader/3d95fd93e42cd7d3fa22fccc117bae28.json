{"ast":null,"code":"import axiosInstance from './axiosInstance';\nexport const signup = userdata => axiosInstance.post(`/user/signup`, userdata);\nexport const login = userdata => axiosInstance.post(`/user/login`, userdata);\nexport const saveTokenInLocalStorage = token => {\n  const getCurrentTime = new Date().getTime();\n  const tokenExpireIn = token.expiresIn * 1000;\n  token.expireDate = new Date(getCurrentTime + tokenExpireIn);\n  localStorage.setItem('userToken', JSON.stringify(token));\n}; // export function runLogoutTimer(dispatch, timer, history) {\n//   setTimeout(() => {\n//     dispatch(logout(history))\n//   }, timer)\n// }\n// export function checkAutoLogin(dispatch, history) {\n//   const tokenDetailsString = localStorage.getItem('userDetails');\n//   let tokenDetails = '';\n//   if (!tokenDetailsString) {\n//     dispatch(logout(history));\n//     return;\n//   }\n//   tokenDetails = JSON.parse(tokenDetailsString);\n//   let expireDate = new Date(tokenDetails.expireDate);\n//   let todaysDate = new Date();\n//   if (todaysDate > expireDate) {\n//     dispatch(logout(history));\n//     return;\n//   }\n//   dispatch(loginConfirmedAction(tokenDetails));\n//   const timer = expireDate.getTime() - todaysDate.getTime();\n//   runLogoutTimer(dispatch, timer, history);\n// }","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Services/auth.service.js"],"names":["axiosInstance","signup","userdata","post","login","saveTokenInLocalStorage","token","getCurrentTime","Date","getTime","tokenExpireIn","expiresIn","expireDate","localStorage","setItem","JSON","stringify"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AAEA,OAAO,MAAMC,MAAM,GAAGC,QAAQ,IAAIF,aAAa,CAACG,IAAd,CAAoB,cAApB,EAAmCD,QAAnC,CAA3B;AAEP,OAAO,MAAME,KAAK,GAAGF,QAAQ,IAAIF,aAAa,CAACG,IAAd,CAAoB,aAApB,EAAkCD,QAAlC,CAA1B;AAEP,OAAO,MAAMG,uBAAuB,GAAGC,KAAK,IAAI;AAC9C,QAAMC,cAAc,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAvB;AACA,QAAMC,aAAa,GAAGJ,KAAK,CAACK,SAAN,GAAkB,IAAxC;AACAL,EAAAA,KAAK,CAACM,UAAN,GAAmB,IAAIJ,IAAJ,CAASD,cAAc,GAAGG,aAA1B,CAAnB;AACAG,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeV,KAAf,CAAlC;AACD,CALM,C,CAOP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import axiosInstance from './axiosInstance'\n\nexport const signup = userdata => axiosInstance.post(`/user/signup`, userdata)\n\nexport const login = userdata => axiosInstance.post(`/user/login`, userdata)\n\nexport const saveTokenInLocalStorage = token => {\n  const getCurrentTime = new Date().getTime()\n  const tokenExpireIn = token.expiresIn * 1000\n  token.expireDate = new Date(getCurrentTime + tokenExpireIn)\n  localStorage.setItem('userToken', JSON.stringify(token))\n}\n\n// export function runLogoutTimer(dispatch, timer, history) {\n//   setTimeout(() => {\n//     dispatch(logout(history))\n//   }, timer)\n// }\n\n// export function checkAutoLogin(dispatch, history) {\n//   const tokenDetailsString = localStorage.getItem('userDetails');\n//   let tokenDetails = '';\n//   if (!tokenDetailsString) {\n//     dispatch(logout(history));\n//     return;\n//   }\n\n//   tokenDetails = JSON.parse(tokenDetailsString);\n//   let expireDate = new Date(tokenDetails.expireDate);\n//   let todaysDate = new Date();\n\n//   if (todaysDate > expireDate) {\n//     dispatch(logout(history));\n//     return;\n//   }\n//   dispatch(loginConfirmedAction(tokenDetails));\n\n//   const timer = expireDate.getTime() - todaysDate.getTime();\n//   runLogoutTimer(dispatch, timer, history);\n// }\n"]},"metadata":{},"sourceType":"module"}