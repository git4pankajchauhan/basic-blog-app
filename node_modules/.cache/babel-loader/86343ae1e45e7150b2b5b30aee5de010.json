{"ast":null,"code":"import axiosInstance from './axiosInstance';\nexport const signup = userdata => axiosInstance.post(`/auth/signup`, userdata);\nexport const login = userdata => axiosInstance.post(`/auth/login`, userdata);\nexport const loadUser = () => axiosInstance.post(`/auth/user`); // export const saveTokenInLocalStorage = token => {\n//   token.expireDate = new Date(new Date().getTime() + token.expiresIn * 1000)\n//   localStorage.setItem('userToken', JSON.stringify(token))\n// }\n// export function runLogoutTimer(dispatch, timer, history) {\n//   setTimeout(() => {\n//     dispatch(logout(history))\n//   }, timer)\n// }\n// export function checkAutoLogin(dispatch, history) {\n//   const tokenDetailsString = localStorage.getItem('userToken')\n//   if (!tokenDetailsString) {\n//     dispatch(logout(history))\n//     return\n//   }\n//   let tokenDetails = JSON.parse(tokenDetailsString)\n//   let expireDate = new Date(tokenDetails.expireDate)\n//   let todaysDate = new Date()\n//   if (todaysDate > expireDate) {\n//     dispatch(logout(history))\n//     return\n//   }\n//   dispatch(loginConfirmedAction(tokenDetails))\n//   const timer = expireDate.getTime() - todaysDate.getTime()\n//   runLogoutTimer(dispatch, timer, history)\n// }","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Services/auth.service.js"],"names":["axiosInstance","signup","userdata","post","login","loadUser"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AAEA,OAAO,MAAMC,MAAM,GAAGC,QAAQ,IAAIF,aAAa,CAACG,IAAd,CAAoB,cAApB,EAAmCD,QAAnC,CAA3B;AAEP,OAAO,MAAME,KAAK,GAAGF,QAAQ,IAAIF,aAAa,CAACG,IAAd,CAAoB,aAApB,EAAkCD,QAAlC,CAA1B;AAEP,OAAO,MAAMG,QAAQ,GAAG,MAAML,aAAa,CAACG,IAAd,CAAoB,YAApB,CAAvB,C,CAEP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA","sourcesContent":["import axiosInstance from './axiosInstance'\n\nexport const signup = userdata => axiosInstance.post(`/auth/signup`, userdata)\n\nexport const login = userdata => axiosInstance.post(`/auth/login`, userdata)\n\nexport const loadUser = () => axiosInstance.post(`/auth/user`)\n\n// export const saveTokenInLocalStorage = token => {\n//   token.expireDate = new Date(new Date().getTime() + token.expiresIn * 1000)\n//   localStorage.setItem('userToken', JSON.stringify(token))\n// }\n\n// export function runLogoutTimer(dispatch, timer, history) {\n//   setTimeout(() => {\n//     dispatch(logout(history))\n//   }, timer)\n// }\n\n// export function checkAutoLogin(dispatch, history) {\n//   const tokenDetailsString = localStorage.getItem('userToken')\n\n//   if (!tokenDetailsString) {\n//     dispatch(logout(history))\n//     return\n//   }\n\n//   let tokenDetails = JSON.parse(tokenDetailsString)\n//   let expireDate = new Date(tokenDetails.expireDate)\n//   let todaysDate = new Date()\n\n//   if (todaysDate > expireDate) {\n//     dispatch(logout(history))\n//     return\n//   }\n\n//   dispatch(loginConfirmedAction(tokenDetails))\n\n//   const timer = expireDate.getTime() - todaysDate.getTime()\n//   runLogoutTimer(dispatch, timer, history)\n// }\n"]},"metadata":{},"sourceType":"module"}