{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport { CustomInput } from 'Components/Input/CustomInput';\nimport Loader from 'Components/Loader/Loader';\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { toggleLoader } from 'Store/actions/common.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n\n  const onInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(preVal => ({ ...preVal,\n      [name]: value\n    }));\n  };\n\n  const onLogin = e => {\n    e.preventDefault();\n    dispatch(loginAction(user, props.history));\n    dispatch(toggleLoader(true));\n  };\n\n  const dispatch = useDispatch();\n  const isSuccessMessage = useSelector(state => state.common.isSuccessMessage);\n  const isErrorMessage = useSelector(state => state.common.isErrorMessage);\n  const isLoader = useSelector(state => state.common.isLoader);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"user-form\",\n    onSubmit: onLogin,\n    autoComplete: \"off\",\n    children: [isLoader && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isErrorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message error\",\n      children: isErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }, this), isSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message success\",\n      children: isSuccessMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      type: \"text\",\n      name: \"email\",\n      onChange: onInputChange,\n      value: user.email,\n      placeholder: \"Enter Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n      type: \"password\",\n      name: \"password\",\n      onChange: onInputChange,\n      value: user.password,\n      placeholder: \"Enter Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      color: color.success,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"5Iup66Xh608x/CKNoLu2GFVaf0w=\", true, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Login/Login.jsx"],"names":["color","CustomButton","CustomInput","Loader","React","useState","useSelector","toggleLoader","Login","props","user","setUser","email","password","onInputChange","e","name","value","target","preVal","onLogin","preventDefault","dispatch","loginAction","history","useDispatch","isSuccessMessage","state","common","isErrorMessage","isLoader","success"],"mappings":"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","sourcesContent":["import { color } from 'Assets/Style/themes'\nimport CustomButton from 'Components/Button/CustomButton'\nimport { CustomInput } from 'Components/Input/CustomInput'\nimport Loader from 'Components/Loader/Loader'\nimport React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { toggleLoader } from 'Store/actions/common.action'\n\nconst Login = props => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n  })\n\n  const onInputChange = e => {\n    const { name, value } = e.target\n    setUser(preVal => ({\n      ...preVal,\n      [name]: value,\n    }))\n  }\n\n  const onLogin = e => {\n    e.preventDefault()\n    dispatch(loginAction(user, props.history))\n    dispatch(toggleLoader(true))\n  }\n\n  const dispatch = useDispatch()\n  const isSuccessMessage = useSelector(state => state.common.isSuccessMessage)\n  const isErrorMessage = useSelector(state => state.common.isErrorMessage)\n  const isLoader = useSelector(state => state.common.isLoader)\n\n  return (\n    <form className='user-form' onSubmit={onLogin} autoComplete='off'>\n      {isLoader && <Loader />}\n      <h2 className='form-title'>Log In</h2>\n      {isErrorMessage && <div className='message error'>{isErrorMessage}</div>}\n      {isSuccessMessage && <div className='message success'>{isSuccessMessage}</div>}\n      <CustomInput type='text' name='email' onChange={onInputChange} value={user.email} placeholder='Enter Email' />\n      <CustomInput type='password' name='password' onChange={onInputChange} value={user.password} placeholder='Enter Password' />\n      <CustomButton color={color.success}>Submit</CustomButton>\n    </form>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}