{"ast":null,"code":"import { CLOSE_DRAWER, OPEN_DRAWER, TOGGLE_LOADER } from 'Store/constants/common.constant';\nconst initialState = {\n  drawer: {\n    isOpen: false,\n    id: null\n  },\n  isLoader: false\n};\nexport default function CommonReducer(state = initialState, actions) {\n  if (actions.type === TOGGLE_LOADER) {\n    return { ...state,\n      isLoader: actions.payload\n    };\n  }\n\n  if (actions.type === OPEN_DRAWER) {\n    return { ...state,\n      drawer: {\n        isOpen: true,\n        id: actions.payload\n      }\n    };\n  }\n\n  if (actions.type === CLOSE_DRAWER) {\n    return { ...state,\n      drawer: initialState.drawer\n    };\n  }\n\n  return state;\n}\n_c = CommonReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommonReducer\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/reducers/common.reducer.js"],"names":["CLOSE_DRAWER","OPEN_DRAWER","TOGGLE_LOADER","initialState","drawer","isOpen","id","isLoader","CommonReducer","state","actions","type","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,WAAvB,EAAoCC,aAApC,QAAyD,iCAAzD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,KADF;AAENC,IAAAA,EAAE,EAAE;AAFE,GADW;AAKnBC,EAAAA,QAAQ,EAAE;AALS,CAArB;AAQA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGN,YAA/B,EAA6CO,OAA7C,EAAsD;AACnE,MAAIA,OAAO,CAACC,IAAR,KAAiBT,aAArB,EAAoC;AAClC,WAAO,EACL,GAAGO,KADE;AAELF,MAAAA,QAAQ,EAAEG,OAAO,CAACE;AAFb,KAAP;AAID;;AACD,MAAIF,OAAO,CAACC,IAAR,KAAiBV,WAArB,EAAkC;AAChC,WAAO,EACL,GAAGQ,KADE;AAELL,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,IADF;AAENC,QAAAA,EAAE,EAAEI,OAAO,CAACE;AAFN;AAFH,KAAP;AAOD;;AACD,MAAIF,OAAO,CAACC,IAAR,KAAiBX,YAArB,EAAmC;AACjC,WAAO,EACL,GAAGS,KADE;AAELL,MAAAA,MAAM,EAAED,YAAY,CAACC;AAFhB,KAAP;AAID;;AACD,SAAOK,KAAP;AACD;KAvBuBD,a","sourcesContent":["import { CLOSE_DRAWER, OPEN_DRAWER, TOGGLE_LOADER } from 'Store/constants/common.constant'\n\nconst initialState = {\n  drawer: {\n    isOpen: false,\n    id: null,\n  },\n  isLoader: false,\n}\n\nexport default function CommonReducer(state = initialState, actions) {\n  if (actions.type === TOGGLE_LOADER) {\n    return {\n      ...state,\n      isLoader: actions.payload,\n    }\n  }\n  if (actions.type === OPEN_DRAWER) {\n    return {\n      ...state,\n      drawer: {\n        isOpen: true,\n        id: actions.payload,\n      },\n    }\n  }\n  if (actions.type === CLOSE_DRAWER) {\n    return {\n      ...state,\n      drawer: initialState.drawer,\n    }\n  }\n  return state\n}\n"]},"metadata":{},"sourceType":"module"}