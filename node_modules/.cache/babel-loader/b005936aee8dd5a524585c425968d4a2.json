{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx\",\n    _s = $RefreshSig$();\n\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { toggleDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPostForm = ({\n  id\n}) => {\n  _s();\n\n  const post = useSelector(state => state.posts.posts[0]);\n  const dispatch = useDispatch();\n\n  const onAddPostChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPost(lastInput => ({ ...lastInput,\n      [name]: value\n    }));\n  };\n\n  const onCreatePost = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(post, props.history));\n  }; // useEffect(() => {\n  //   if (props.post) {\n  //     dispatch(toggleDrawer(true))\n  //     setPost(props.post)\n  //   } else {\n  //     props.history.push('/posts')\n  //   }\n  // }, [props.post, props.match.params])\n\n\n  return /*#__PURE__*/_jsxDEV(CustomDrawer, {\n    headTitle: \"Edit Post\",\n    id: id,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        type: \"text\",\n        name: \"title\",\n        value: post.title,\n        onChange: onAddPostChange,\n        placeholder: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        type: \"text\",\n        name: \"subTitle\",\n        value: post.subTitle,\n        onChange: onAddPostChange,\n        placeholder: \"Enter Sub Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        type: \"text\",\n        name: \"tags\",\n        value: post.tags,\n        onChange: onAddPostChange,\n        placeholder: \"Enter Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomTextArea, {\n        type: \"text\",\n        name: \"description\",\n        value: post.description,\n        onChange: onAddPostChange,\n        placeholder: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        color: color.success,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPostForm, \"GodkcYcRDoQDEr4+6WN+pzSstXo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = EditPostForm;\nexport default EditPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx"],"names":["color","CustomButton","CustomDrawer","CustomInput","CustomTextArea","React","useEffect","useState","connect","useDispatch","useSelector","toggleDrawer","updatePostAction","getPost","EditPostForm","id","post","state","posts","dispatch","onAddPostChange","e","name","value","target","setPost","lastInput","onCreatePost","preventDefault","props","history","title","subTitle","tags","description","success"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,8BAA5C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,OAAT,QAAwB,gCAAxB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAA;;AAC/B,QAAMC,IAAI,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkB,CAAlB,CAAV,CAAxB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,QAAMW,eAAe,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAC,IAAAA,OAAO,CAACC,SAAS,KAAK,EACpB,GAAGA,SADiB;AAEpB,OAACJ,IAAD,GAAQC;AAFY,KAAL,CAAV,CAAP;AAID,GAND;;AAQA,QAAMI,YAAY,GAAGN,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACO,cAAF;AACAT,IAAAA,QAAQ,CAACP,gBAAgB,CAACI,IAAD,EAAOa,KAAK,CAACC,OAAb,CAAjB,CAAR;AACD,GAHD,CAZ+B,CAiB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,YAAD;AAAc,IAAA,SAAS,EAAC,WAAxB;AAAoC,IAAA,EAAE,EAAEf,EAAxC;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEY,YAAhB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,IAAI,EAAC,OAA9B;AAAsC,QAAA,KAAK,EAAEX,IAAI,CAACe,KAAlD;AAAyD,QAAA,QAAQ,EAAEX,eAAnE;AAAoF,QAAA,WAAW,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,IAAI,EAAC,UAA9B;AAAyC,QAAA,KAAK,EAAEJ,IAAI,CAACgB,QAArD;AAA+D,QAAA,QAAQ,EAAEZ,eAAzE;AAA0F,QAAA,WAAW,EAAC;AAAtG;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,MAAlB;AAAyB,QAAA,IAAI,EAAC,MAA9B;AAAqC,QAAA,KAAK,EAAEJ,IAAI,CAACiB,IAAjD;AAAuD,QAAA,QAAQ,EAAEb,eAAjE;AAAkF,QAAA,WAAW,EAAC;AAA9F;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,IAAI,EAAC,aAAjC;AAA+C,QAAA,KAAK,EAAEJ,IAAI,CAACkB,WAA3D;AAAwE,QAAA,QAAQ,EAAEd,eAAlF;AAAmG,QAAA,WAAW,EAAC;AAA/G;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEpB,KAAK,CAACmC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArCD;;GAAMrB,Y;UACSJ,W,EACID,W;;;KAFbK,Y;AAuCN,eAAeA,YAAf","sourcesContent":["import { color } from 'Assets/Style/themes'\nimport CustomButton from 'Components/Button/CustomButton'\nimport CustomDrawer from 'Components/Drawer/CustomDrawer'\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput'\nimport React, { useEffect, useState } from 'react'\nimport { connect, useDispatch, useSelector } from 'react-redux'\nimport { toggleDrawer } from 'Store/actions/common.action'\nimport { updatePostAction } from 'Store/actions/post.action'\nimport { getPost } from 'Store/selectors/Post.selectors'\n\nconst EditPostForm = ({ id }) => {\n  const post = useSelector(state => state.posts.posts[0])\n  const dispatch = useDispatch()\n\n  const onAddPostChange = e => {\n    const { name, value } = e.target\n    setPost(lastInput => ({\n      ...lastInput,\n      [name]: value,\n    }))\n  }\n\n  const onCreatePost = e => {\n    e.preventDefault()\n    dispatch(updatePostAction(post, props.history))\n  }\n\n  // useEffect(() => {\n  //   if (props.post) {\n  //     dispatch(toggleDrawer(true))\n  //     setPost(props.post)\n  //   } else {\n  //     props.history.push('/posts')\n  //   }\n  // }, [props.post, props.match.params])\n\n  return (\n    <CustomDrawer headTitle='Edit Post' id={id}>\n      <form onSubmit={onCreatePost}>\n        <CustomInput type='text' name='title' value={post.title} onChange={onAddPostChange} placeholder='Enter Title' />\n        <CustomInput type='text' name='subTitle' value={post.subTitle} onChange={onAddPostChange} placeholder='Enter Sub Title' />\n        <CustomInput type='text' name='tags' value={post.tags} onChange={onAddPostChange} placeholder='Enter Tags' />\n        <CustomTextArea type='text' name='description' value={post.description} onChange={onAddPostChange} placeholder='Enter Description' />\n        <CustomButton color={color.success}>Submit</CustomButton>\n      </form>\n    </CustomDrawer>\n  )\n}\n\nexport default EditPostForm\n"]},"metadata":{},"sourceType":"module"}