{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx\",\n    _s = $RefreshSig$();\n\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPostForm = props => {\n  _s();\n\n  const [post, setPost] = useState({ ...props.post\n  });\n  const dispatch = useDispatch();\n\n  const onCreatePost = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(post, props.history));\n  };\n\n  const onAddPostChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPost(lastInput => ({ ...lastInput,\n      [name]: value\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(openDrawer());\n    console.log(post);\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(CustomDrawer, {\n    headTitle: \"Edit Post\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onCreatePost,\n      children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n        type: \"text\",\n        name: \"title\",\n        value: post.title,\n        onChange: onAddPostChange,\n        placeholder: \"Enter Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        type: \"text\",\n        name: \"subTitle\",\n        value: post.subTitle,\n        onChange: onAddPostChange,\n        placeholder: \"Enter Sub Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        type: \"text\",\n        name: \"tags\",\n        value: post.tags,\n        onChange: onAddPostChange,\n        placeholder: \"Enter Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomTextArea, {\n        type: \"text\",\n        name: \"description\",\n        value: post.description,\n        onChange: onAddPostChange,\n        placeholder: \"Enter Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        color: color.success,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPostForm, \"eK/B0x6KrJGYq0p/4DkvsD8N6Dk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditPostForm;\n\nconst mapStateToProps = state => {\n  const post = getPost();\n  return (state, props) => {\n    return {\n      post: post(state, props.match.params.id)\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(EditPostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx"],"names":["color","CustomButton","CustomDrawer","CustomInput","CustomTextArea","React","useEffect","useState","connect","useDispatch","openDrawer","updatePostAction","getPost","EditPostForm","props","post","setPost","dispatch","onCreatePost","e","preventDefault","history","onAddPostChange","name","value","target","lastInput","console","log","title","subTitle","tags","description","success","mapStateToProps","state","match","params","id"],"mappings":"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","sourcesContent":["import { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\n\nconst EditPostForm = props => {\n  const [post, setPost] = useState({ ...props.post });\n  const dispatch = useDispatch();\n\n  const onCreatePost = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(post, props.history));\n  };\n\n  const onAddPostChange = e => {\n    const { name, value } = e.target;\n    setPost(lastInput => ({\n      ...lastInput,\n      [name]: value,\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(openDrawer());\n    console.log(post);\n  }, [props]);\n\n  return (\n    <CustomDrawer headTitle=\"Edit Post\">\n      <form onSubmit={onCreatePost}>\n        <CustomInput type=\"text\" name=\"title\" value={post.title} onChange={onAddPostChange} placeholder=\"Enter Title\" />\n        <CustomInput type=\"text\" name=\"subTitle\" value={post.subTitle} onChange={onAddPostChange} placeholder=\"Enter Sub Title\" />\n        <CustomInput type=\"text\" name=\"tags\" value={post.tags} onChange={onAddPostChange} placeholder=\"Enter Tags\" />\n        <CustomTextArea type=\"text\" name=\"description\" value={post.description} onChange={onAddPostChange} placeholder=\"Enter Description\" />\n        <CustomButton color={color.success}>Submit</CustomButton>\n      </form>\n    </CustomDrawer>\n  );\n};\n\nconst mapStateToProps = state => {\n  const post = getPost();\n  return (state, props) => {\n    return {\n      post: post(state, props.match.params.id),\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(EditPostForm);\n"]},"metadata":{},"sourceType":"module"}