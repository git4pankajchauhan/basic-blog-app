{"ast":null,"code":"import { login, saveTokenInLocalStorage, signup } from 'Services/auth.service';\nimport { LOGIN_FAIL, LOGIN_SUCCESS } from 'Store/constants/auth.constant';\nimport { errorMessage, successMessage, toggleLoader } from './common.action';\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata);\n    if (!response.data.status) return dispatch(errorMessage(response.data.message));\n    dispatch(successMessage(response.data.message));\n    history.push('/login');\n  } catch (error) {\n    dispatch(errorMessage('Oops! Something went wrong.'));\n    console.log('signup action error:', error);\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await login(userdata);\n\n    if (!response.data.status) {\n      dispatch(errorMessage(response.data.message));\n      return;\n    }\n\n    const {\n      isAuth,\n      token,\n      user\n    } = response.data;\n    dispatch(loginActionSuccess(userdata));\n  } catch (error) {\n    console.log('login action error:', error);\n    dispatch(errorMessage('Oops! Something went wrong.'));\n  }\n\n  dispatch(toggleLoader(false));\n};\nexport const loginActionSuccess = userdata => ({\n  type: LOGIN_SUCCESS,\n  payload: userdata\n});\nexport const loginActionFail = () => ({\n  type: LOGIN_FAIL\n}); // export function logout(history) {\n//   localStorage.removeItem('userToken')\n//   history.push('/login')\n//   return {\n//     type: LOGOUT_ACTION,\n//   }\n// }","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/actions/auth.action.js"],"names":["login","saveTokenInLocalStorage","signup","LOGIN_FAIL","LOGIN_SUCCESS","errorMessage","successMessage","toggleLoader","signupAction","userdata","history","dispatch","response","data","status","message","push","error","console","log","loginAction","isAuth","token","user","loginActionSuccess","type","payload","loginActionFail"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,uBAAhB,EAAyCC,MAAzC,QAAuD,uBAAvD;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,+BAA1C;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,YAAvC,QAA2D,iBAA3D;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AACnE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMV,MAAM,CAACO,QAAD,CAA7B;AAEA,QAAI,CAACG,QAAQ,CAACC,IAAT,CAAcC,MAAnB,EAA2B,OAAOH,QAAQ,CAACN,YAAY,CAACO,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAb,CAAf;AAE3BJ,IAAAA,QAAQ,CAACL,cAAc,CAACM,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAf,CAAR;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,QAAb;AACD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACdN,IAAAA,QAAQ,CAACN,YAAY,CAAC,6BAAD,CAAb,CAAR;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,KAApC;AACD;;AAEDN,EAAAA,QAAQ,CAACJ,YAAY,CAAC,KAAD,CAAb,CAAR;AACD,CAdM;AAeP,OAAO,MAAMa,WAAW,GAAG,CAACX,QAAD,EAAWC,OAAX,KAAuB,MAAMC,QAAN,IAAkB;AAClE,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACS,QAAD,CAA5B;;AAEA,QAAI,CAACG,QAAQ,CAACC,IAAT,CAAcC,MAAnB,EAA2B;AACzBH,MAAAA,QAAQ,CAACN,YAAY,CAACO,QAAQ,CAACC,IAAT,CAAcE,OAAf,CAAb,CAAR;AACA;AACD;;AAED,UAAM;AAAEM,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,QAA0BX,QAAQ,CAACC,IAAzC;AAEAF,IAAAA,QAAQ,CAACa,kBAAkB,CAACf,QAAD,CAAnB,CAAR;AACD,GAXD,CAWE,OAAOQ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC;AACAN,IAAAA,QAAQ,CAACN,YAAY,CAAC,6BAAD,CAAb,CAAR;AACD;;AAEDM,EAAAA,QAAQ,CAACJ,YAAY,CAAC,KAAD,CAAb,CAAR;AACD,CAlBM;AAoBP,OAAO,MAAMiB,kBAAkB,GAAGf,QAAQ,KAAK;AAC7CgB,EAAAA,IAAI,EAAErB,aADuC;AAE7CsB,EAAAA,OAAO,EAAEjB;AAFoC,CAAL,CAAnC;AAKP,OAAO,MAAMkB,eAAe,GAAG,OAAO;AACpCF,EAAAA,IAAI,EAAEtB;AAD8B,CAAP,CAAxB,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { login, saveTokenInLocalStorage, signup } from 'Services/auth.service'\nimport { LOGIN_FAIL, LOGIN_SUCCESS } from 'Store/constants/auth.constant'\nimport { errorMessage, successMessage, toggleLoader } from './common.action'\n\nexport const signupAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await signup(userdata)\n\n    if (!response.data.status) return dispatch(errorMessage(response.data.message))\n\n    dispatch(successMessage(response.data.message))\n    history.push('/login')\n  } catch (error) {\n    dispatch(errorMessage('Oops! Something went wrong.'))\n    console.log('signup action error:', error)\n  }\n\n  dispatch(toggleLoader(false))\n}\nexport const loginAction = (userdata, history) => async dispatch => {\n  try {\n    const response = await login(userdata)\n\n    if (!response.data.status) {\n      dispatch(errorMessage(response.data.message))\n      return\n    }\n\n    const { isAuth, token, user } = response.data\n\n    dispatch(loginActionSuccess(userdata))\n  } catch (error) {\n    console.log('login action error:', error)\n    dispatch(errorMessage('Oops! Something went wrong.'))\n  }\n\n  dispatch(toggleLoader(false))\n}\n\nexport const loginActionSuccess = userdata => ({\n  type: LOGIN_SUCCESS,\n  payload: userdata,\n})\n\nexport const loginActionFail = () => ({\n  type: LOGIN_FAIL,\n})\n\n// export function logout(history) {\n//   localStorage.removeItem('userToken')\n//   history.push('/login')\n//   return {\n//     type: LOGOUT_ACTION,\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}