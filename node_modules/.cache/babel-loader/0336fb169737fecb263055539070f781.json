{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx\",\n    _s = $RefreshSig$();\n\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditPostForm = props => {\n  _s();\n\n  const [post, setPost] = useState({ ...props.post\n  });\n  const dispatch = useDispatch();\n\n  const onAddPostChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPost(lastInput => ({ ...lastInput,\n      [name]: value\n    }));\n  };\n\n  const onCreatePost = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(post, props.history));\n  };\n\n  useEffect(() => {\n    if (props.post) {\n      dispatch(openDrawer());\n      setPost(props.post);\n    } else {\n      props.history.push('/posts');\n    }\n  }, [props.post]);\n  useEffect(() => {}, [props.match.params]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CustomDrawer, {\n      headTitle: \"Edit Post\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onCreatePost,\n        children: [/*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"text\",\n          name: \"title\",\n          value: post.title,\n          onChange: onAddPostChange,\n          placeholder: \"Enter Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"text\",\n          name: \"subTitle\",\n          value: post.subTitle,\n          onChange: onAddPostChange,\n          placeholder: \"Enter Sub Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"text\",\n          name: \"tags\",\n          value: post.tags,\n          onChange: onAddPostChange,\n          placeholder: \"Enter Tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomTextArea, {\n          type: \"text\",\n          name: \"description\",\n          value: post.description,\n          onChange: onAddPostChange,\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          color: color.success,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(EditPostForm, \"z5QNKCaBLmYke9EE8WhIo1IKlkw=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditPostForm;\n\nconst mapStateToProps = state => {\n  const post = getPost();\n  return (state, props) => {\n    return {\n      post: post(state, props.match.params.id)\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(EditPostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx"],"names":["color","CustomButton","CustomDrawer","CustomInput","CustomTextArea","React","useEffect","useState","connect","useDispatch","openDrawer","updatePostAction","getPost","EditPostForm","props","post","setPost","dispatch","onAddPostChange","e","name","value","target","lastInput","onCreatePost","preventDefault","history","push","match","params","title","subTitle","tags","description","success","mapStateToProps","state","id"],"mappings":"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","sourcesContent":["import { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\n\nconst EditPostForm = props => {\n  const [post, setPost] = useState({ ...props.post });\n\n  const dispatch = useDispatch();\n\n  const onAddPostChange = e => {\n    const { name, value } = e.target;\n    setPost(lastInput => ({\n      ...lastInput,\n      [name]: value,\n    }));\n  };\n\n  const onCreatePost = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(post, props.history));\n  };\n\n  useEffect(() => {\n    if (props.post) {\n      dispatch(openDrawer());\n      setPost(props.post);\n    } else {\n      props.history.push('/posts');\n    }\n  }, [props.post]);\n\n  useEffect(() => {}, [props.match.params]);\n\n  return (\n    <>\n      <CustomDrawer headTitle=\"Edit Post\">\n        <form onSubmit={onCreatePost}>\n          <CustomInput type=\"text\" name=\"title\" value={post.title} onChange={onAddPostChange} placeholder=\"Enter Title\" />\n          <CustomInput type=\"text\" name=\"subTitle\" value={post.subTitle} onChange={onAddPostChange} placeholder=\"Enter Sub Title\" />\n          <CustomInput type=\"text\" name=\"tags\" value={post.tags} onChange={onAddPostChange} placeholder=\"Enter Tags\" />\n          <CustomTextArea type=\"text\" name=\"description\" value={post.description} onChange={onAddPostChange} placeholder=\"Enter Description\" />\n          <CustomButton color={color.success}>Submit</CustomButton>\n        </form>\n      </CustomDrawer>\n    </>\n  );\n};\n\nconst mapStateToProps = state => {\n  const post = getPost();\n  return (state, props) => {\n    return {\n      post: post(state, props.match.params.id),\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(EditPostForm);\n"]},"metadata":{},"sourceType":"module"}