{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx\",\n    _s = $RefreshSig$();\n\nimport { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPostForm = props => {\n  _s();\n\n  const [post, setPost] = useState({ ...props.post\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setPost(props.post);\n  }, [props.post]);\n  useEffect(() => {\n    console.log(post);\n  }, []);\n\n  const onAddPostChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setPost(lastInput => ({ ...lastInput,\n      [name]: value\n    }));\n  };\n\n  const onCreatePost = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(post, props.history));\n  };\n\n  useEffect(() => {\n    dispatch(openDrawer());\n  }, [props.match.params]);\n  return /*#__PURE__*/_jsxDEV(CustomDrawer, {\n    headTitle: \"Edit Post\",\n    children: post ?\n    /*#__PURE__*/\n    // <form onSubmit={onCreatePost}>\n    //   <CustomInput type=\"text\" name=\"title\" value={post.title} onChange={onAddPostChange} placeholder=\"Enter Title\" />\n    //   <CustomInput type=\"text\" name=\"subTitle\" value={post.subTitle} onChange={onAddPostChange} placeholder=\"Enter Sub Title\" />\n    //   <CustomInput type=\"text\" name=\"tags\" value={post.tags} onChange={onAddPostChange} placeholder=\"Enter Tags\" />\n    //   <CustomTextArea type=\"text\" name=\"description\" value={post.description} onChange={onAddPostChange} placeholder=\"Enter Description\" />\n    //   <CustomButton color={color.success}>Submit</CustomButton>\n    // </form>\n    _jsxDEV(\"h1\", {\n      children: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : 'ko'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditPostForm, \"oBKZ2UbZwARVSMqlRJ5WR6Y3eUc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = EditPostForm;\n\nconst mapStateToProps = state => {\n  const post = getPost();\n  return (state, props) => {\n    return {\n      post: post(state, props.match.params.id)\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(EditPostForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPostForm\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Components/Post/EditPostForm .jsx"],"names":["color","CustomButton","CustomDrawer","CustomInput","CustomTextArea","React","useEffect","useState","connect","useDispatch","openDrawer","updatePostAction","getPost","EditPostForm","props","post","setPost","dispatch","console","log","onAddPostChange","e","name","value","target","lastInput","onCreatePost","preventDefault","history","match","params","mapStateToProps","state","id"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,8BAA5C;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,OAAT,QAAwB,gCAAxB;;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAE,GAAGO,KAAK,CAACC;AAAX,GAAD,CAAhC;AAEA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACF,KAAK,CAACC,IAAP,CAAP;AACD,GAFQ,EAEN,CAACD,KAAK,CAACC,IAAP,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,eAAe,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAR,IAAAA,OAAO,CAACS,SAAS,KAAK,EACpB,GAAGA,SADiB;AAEpB,OAACH,IAAD,GAAQC;AAFY,KAAL,CAAV,CAAP;AAID,GAND;;AAQA,QAAMG,YAAY,GAAGL,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACM,cAAF;AACAV,IAAAA,QAAQ,CAACN,gBAAgB,CAACI,IAAD,EAAOD,KAAK,CAACc,OAAb,CAAjB,CAAR;AACD,GAHD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACP,UAAU,EAAX,CAAR;AACD,GAFQ,EAEN,CAACI,KAAK,CAACe,KAAN,CAAYC,MAAb,CAFM,CAAT;AAIA,sBACE,QAAC,YAAD;AAAc,IAAA,SAAS,EAAC,WAAxB;AAAA,cACGf,IAAI;AAAA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YARG,GAUH;AAXJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7CD;;GAAMF,Y;UAGaJ,W;;;KAHbI,Y;;AA+CN,MAAMkB,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMjB,IAAI,GAAGH,OAAO,EAApB;AACA,SAAO,CAACoB,KAAD,EAAQlB,KAAR,KAAkB;AACvB,WAAO;AACLC,MAAAA,IAAI,EAAEA,IAAI,CAACiB,KAAD,EAAQlB,KAAK,CAACe,KAAN,CAAYC,MAAZ,CAAmBG,EAA3B;AADL,KAAP;AAGD,GAJD;AAKD,CAPD;;AASA,eAAezB,OAAO,CAACuB,eAAD,CAAP,CAAyBlB,YAAzB,CAAf","sourcesContent":["import { color } from 'Assets/Style/themes';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CustomDrawer from 'Components/Drawer/CustomDrawer';\nimport { CustomInput, CustomTextArea } from 'Components/Input/CustomInput';\nimport React, { useEffect, useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { updatePostAction } from 'Store/actions/post.action';\nimport { getPost } from 'Store/selectors/Post.selectors';\n\nconst EditPostForm = props => {\n  const [post, setPost] = useState({ ...props.post });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setPost(props.post);\n  }, [props.post]);\n\n  useEffect(() => {\n    console.log(post);\n  }, []);\n\n  const onAddPostChange = e => {\n    const { name, value } = e.target;\n    setPost(lastInput => ({\n      ...lastInput,\n      [name]: value,\n    }));\n  };\n\n  const onCreatePost = e => {\n    e.preventDefault();\n    dispatch(updatePostAction(post, props.history));\n  };\n  useEffect(() => {\n    dispatch(openDrawer());\n  }, [props.match.params]);\n\n  return (\n    <CustomDrawer headTitle=\"Edit Post\">\n      {post ? (\n        // <form onSubmit={onCreatePost}>\n        //   <CustomInput type=\"text\" name=\"title\" value={post.title} onChange={onAddPostChange} placeholder=\"Enter Title\" />\n        //   <CustomInput type=\"text\" name=\"subTitle\" value={post.subTitle} onChange={onAddPostChange} placeholder=\"Enter Sub Title\" />\n        //   <CustomInput type=\"text\" name=\"tags\" value={post.tags} onChange={onAddPostChange} placeholder=\"Enter Tags\" />\n        //   <CustomTextArea type=\"text\" name=\"description\" value={post.description} onChange={onAddPostChange} placeholder=\"Enter Description\" />\n        //   <CustomButton color={color.success}>Submit</CustomButton>\n        // </form>\n        <h1>{post}</h1>\n      ) : (\n        'ko'\n      )}\n    </CustomDrawer>\n  );\n};\n\nconst mapStateToProps = state => {\n  const post = getPost();\n  return (state, props) => {\n    return {\n      post: post(state, props.match.params.id),\n    };\n  };\n};\n\nexport default connect(mapStateToProps)(EditPostForm);\n"]},"metadata":{},"sourceType":"module"}