{"ast":null,"code":"var _jsxFileName = \"/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport { Add } from '@material-ui/icons';\nimport CustomButton from 'Components/Button/CustomButton';\nimport CreatePostForm from 'Components/Post/CreatePostForm';\nimport EditPostForm from 'Components/Post/EditPostForm ';\nimport Post from 'Components/Post/Post';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openDrawer } from 'Store/actions/common.action';\nimport { getPostActionByTag, getPostsAction } from 'Store/actions/post.action';\nimport './Post.style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  _s();\n\n  const [search, setSearch] = useState('');\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n\n  const onSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const onOpenCreatePost = () => {\n    dispatch(openDrawer('CREATE_POST'));\n  };\n\n  const onPostEditClick = id => {\n    // dispatch(openDrawer('EDIT_POST'))\n    console.log('dasd');\n  };\n\n  useEffect(() => {\n    if (search) {\n      dispatch(getPostActionByTag(search));\n    } else {\n      dispatch(getPostsAction());\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"post-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"filter-post\",\n          placeholder: \"Search by tags...\",\n          onChange: onSearch,\n          value: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          className: \"add-post-btn\",\n          onClick: onOpenCreatePost,\n          children: [/*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), \" Create New Post\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, { ...post,\n          history: props.history,\n          onPostEditClick: onPostEditClick\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreatePostForm, {\n      id: \"CREATE_POST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditPostForm, {\n      id: \"EDIT_POST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"ogFwrj9zDkYVetYXdoQg7V0kGi0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Pages/Post/Posts.jsx"],"names":["Add","CustomButton","CreatePostForm","EditPostForm","Post","React","useEffect","useState","useDispatch","useSelector","openDrawer","getPostActionByTag","getPostsAction","Posts","props","search","setSearch","dispatch","posts","state","onSearch","e","target","value","onOpenCreatePost","onPostEditClick","id","console","log","map","post","history","_id"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,2BAAnD;AACA,OAAO,mBAAP;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAAzB;;AAEA,QAAME,QAAQ,GAAGC,CAAC,IAAI;AACpBL,IAAAA,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC7BP,IAAAA,QAAQ,CAACP,UAAU,CAAC,aAAD,CAAX,CAAR;AACD,GAFD;;AAGA,QAAMe,eAAe,GAAGC,EAAE,IAAI;AAC5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,GAHD;;AAKAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,MAAJ,EAAY;AACVE,MAAAA,QAAQ,CAACN,kBAAkB,CAACI,MAAD,CAAnB,CAAR;AACD,KAFD,MAEO;AACLE,MAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACD;AACF,GANQ,EAMN,CAACG,MAAD,CANM,CAAT;AAQA,sBACE;AAAS,IAAA,SAAS,EAAC,cAAnB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,SAAS,EAAC,aAA7B;AAA2C,UAAA,WAAW,EAAC,mBAAvD;AAA2E,UAAA,QAAQ,EAAEK,QAArF;AAA+F,UAAA,KAAK,EAAEL;AAAtG;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC,cAAxB;AAAuC,UAAA,OAAO,EAAES,gBAAhD;AAAA,kCACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACGN,KAAK,CAACW,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD,OAAyBA,IAAzB;AAA+B,UAAA,OAAO,EAAEhB,KAAK,CAACiB,OAA9C;AAAuD,UAAA,eAAe,EAAEN;AAAxE,WAAWK,IAAI,CAACE,GAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAcE,QAAC,cAAD;AAAgB,MAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,YAdF,eAeE,QAAC,YAAD;AAAc,MAAA,EAAE,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7CD;;GAAMnB,K;UAGaL,W,EACHC,W;;;KAJVI,K;AA+CN,eAAeA,KAAf","sourcesContent":["import { Add } from '@material-ui/icons'\nimport CustomButton from 'Components/Button/CustomButton'\nimport CreatePostForm from 'Components/Post/CreatePostForm'\nimport EditPostForm from 'Components/Post/EditPostForm '\nimport Post from 'Components/Post/Post'\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { openDrawer } from 'Store/actions/common.action'\nimport { getPostActionByTag, getPostsAction } from 'Store/actions/post.action'\nimport './Post.style.scss'\n\nconst Posts = props => {\n  const [search, setSearch] = useState('')\n\n  const dispatch = useDispatch()\n  const posts = useSelector(state => state.posts.posts)\n\n  const onSearch = e => {\n    setSearch(e.target.value)\n  }\n\n  const onOpenCreatePost = () => {\n    dispatch(openDrawer('CREATE_POST'))\n  }\n  const onPostEditClick = id => {\n    // dispatch(openDrawer('EDIT_POST'))\n    console.log('dasd')\n  }\n\n  useEffect(() => {\n    if (search) {\n      dispatch(getPostActionByTag(search))\n    } else {\n      dispatch(getPostsAction())\n    }\n  }, [search])\n\n  return (\n    <section className='post-section'>\n      <div className='body'>\n        <div className='filter-wrap'>\n          <input type='text' className='filter-post' placeholder='Search by tags...' onChange={onSearch} value={search} />\n          <CustomButton className='add-post-btn' onClick={onOpenCreatePost}>\n            <Add /> Create New Post\n          </CustomButton>\n        </div>\n        <div className='post-container'>\n          {posts.map(post => (\n            <Post key={post._id} {...post} history={props.history} onPostEditClick={onPostEditClick} />\n          ))}\n        </div>\n      </div>\n      <CreatePostForm id='CREATE_POST' />\n      <EditPostForm id='EDIT_POST' />\n    </section>\n  )\n}\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}