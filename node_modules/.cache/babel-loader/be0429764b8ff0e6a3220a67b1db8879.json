{"ast":null,"code":"import { getPosts, getPostByTag, getSinglePost, createPost, updatePost, deletePost } from 'Services/Posts.service';\nimport { GET_POSTS, CREATE_POST_ACTION, EDIT_POST_ACTION, CONFIRMED_GET_POSTS, CONFIRMED_CREATE_POST_ACTION, CONFIRMED_EDIT_POST_ACTION, CONFIRMED_DELETE_POST_ACTION } from 'Store/constants/post.constant';\nexport function getPostsAction() {\n  return async (dispatch, getState) => {\n    try {\n      const posts = await getPosts();\n      dispatch(confirmedGetPostsAction(posts.data));\n    } catch (error) {\n      console.log('get post action error', error);\n    }\n  };\n}\nexport function confirmedGetPostsAction(posts) {\n  return {\n    type: CONFIRMED_GET_POSTS,\n    payload: posts\n  };\n}\nexport const createPostAction = postData => async (dispatch, getState) => {\n  try {\n    console.log('postdata', postData);\n    await createPost(postData);\n    const singlePost = {\n      _id: Math.random(),\n      ...postData\n    };\n    console.log('singlepost', singlePost);\n    dispatch(confirmedGetPostsAction(singlePost));\n  } catch (error) {\n    console.log('create post action error', error);\n  }\n};\nexport const confirmedCreatePostAction = post => ({\n  type: CONFIRMED_CREATE_POST_ACTION,\n  payload: post\n}); // export function deletePostAction(postId) {\n//   return (dispatch, getState) => {\n//     try {\n//       await deletePost(postId);\n//       dispatch(confirmedDeletePostAction(postId));\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// }\n// export function confirmedDeletePostAction(postId) {\n//   return {\n//     type: CONFIRMED_DELETE_POST_ACTION,\n//     payload: postId,\n//   };\n// }\n// export function createPostAction(postData, history) {\n//   return (dispatch, getState) => {\n//     createPost(postData).then(response => {\n//       const singlePost = {\n//         ...postData,\n//         id: response.data.name,\n//       };\n//       dispatch(confirmedCreatePostAction(singlePost));\n//       history.push('/posts');\n//     });\n//   };\n// }\n// export function confirmedCreatePostAction(singlePost) {\n//   return {\n//     type: CONFIRMED_CREATE_POST_ACTION,\n//     payload: singlePost,\n//   };\n// }\n// export function confirmedUpdatePostAction(post) {\n//   return {\n//     type: CONFIRMED_EDIT_POST_ACTION,\n//     payload: post,\n//   };\n// }\n// export function updatePostAction(post, history) {\n//   return (dispatch, getState) => {\n//     updatePost(post, post.id).then(reponse => {\n//       dispatch(confirmedUpdatePostAction(post));\n//       history.push('/posts');\n//     });\n//   };\n// }","map":{"version":3,"sources":["/home/neosoft/Desktop/Pankaj/learning/react/blog-app/basic-blog-redux-app/src/Store/actions/post.action.js"],"names":["getPosts","getPostByTag","getSinglePost","createPost","updatePost","deletePost","GET_POSTS","CREATE_POST_ACTION","EDIT_POST_ACTION","CONFIRMED_GET_POSTS","CONFIRMED_CREATE_POST_ACTION","CONFIRMED_EDIT_POST_ACTION","CONFIRMED_DELETE_POST_ACTION","getPostsAction","dispatch","getState","posts","confirmedGetPostsAction","data","error","console","log","type","payload","createPostAction","postData","singlePost","_id","Math","random","confirmedCreatePostAction","post"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,YAAnB,EAAiCC,aAAjC,EAAgDC,UAAhD,EAA4DC,UAA5D,EAAwEC,UAAxE,QAA0F,wBAA1F;AACA,SAASC,SAAT,EAAoBC,kBAApB,EAAwCC,gBAAxC,EAA0DC,mBAA1D,EAA+EC,4BAA/E,EAA6GC,0BAA7G,EAAyIC,4BAAzI,QAA6K,+BAA7K;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnC,QAAI;AACF,YAAMC,KAAK,GAAG,MAAMhB,QAAQ,EAA5B;AACAc,MAAAA,QAAQ,CAACG,uBAAuB,CAACD,KAAK,CAACE,IAAP,CAAxB,CAAR;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,KAArC;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASF,uBAAT,CAAiCD,KAAjC,EAAwC;AAC7C,SAAO;AACLM,IAAAA,IAAI,EAAEb,mBADD;AAELc,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID;AAED,OAAO,MAAMQ,gBAAgB,GAAGC,QAAQ,IAAI,OAAOX,QAAP,EAAiBC,QAAjB,KAA8B;AACxE,MAAI;AACFK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBI,QAAxB;AACA,UAAMtB,UAAU,CAACsB,QAAD,CAAhB;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,GAAG,EAAEC,IAAI,CAACC,MAAL,EADY;AAEjB,SAAGJ;AAFc,KAAnB;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BK,UAA1B;AACAZ,IAAAA,QAAQ,CAACG,uBAAuB,CAACS,UAAD,CAAxB,CAAR;AACD,GATD,CASE,OAAOP,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAxC;AACD;AACF,CAbM;AAeP,OAAO,MAAMW,yBAAyB,GAAGC,IAAI,KAAK;AAChDT,EAAAA,IAAI,EAAEZ,4BAD0C;AAEhDa,EAAAA,OAAO,EAAEQ;AAFuC,CAAL,CAAtC,C,CAKP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { getPosts, getPostByTag, getSinglePost, createPost, updatePost, deletePost } from 'Services/Posts.service';\nimport { GET_POSTS, CREATE_POST_ACTION, EDIT_POST_ACTION, CONFIRMED_GET_POSTS, CONFIRMED_CREATE_POST_ACTION, CONFIRMED_EDIT_POST_ACTION, CONFIRMED_DELETE_POST_ACTION } from 'Store/constants/post.constant';\n\nexport function getPostsAction() {\n  return async (dispatch, getState) => {\n    try {\n      const posts = await getPosts();\n      dispatch(confirmedGetPostsAction(posts.data));\n    } catch (error) {\n      console.log('get post action error', error);\n    }\n  };\n}\n\nexport function confirmedGetPostsAction(posts) {\n  return {\n    type: CONFIRMED_GET_POSTS,\n    payload: posts,\n  };\n}\n\nexport const createPostAction = postData => async (dispatch, getState) => {\n  try {\n    console.log('postdata', postData);\n    await createPost(postData);\n    const singlePost = {\n      _id: Math.random(),\n      ...postData,\n    };\n    console.log('singlepost', singlePost);\n    dispatch(confirmedGetPostsAction(singlePost));\n  } catch (error) {\n    console.log('create post action error', error);\n  }\n};\n\nexport const confirmedCreatePostAction = post => ({\n  type: CONFIRMED_CREATE_POST_ACTION,\n  payload: post,\n});\n\n// export function deletePostAction(postId) {\n//   return (dispatch, getState) => {\n//     try {\n//       await deletePost(postId);\n//       dispatch(confirmedDeletePostAction(postId));\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// }\n\n// export function confirmedDeletePostAction(postId) {\n//   return {\n//     type: CONFIRMED_DELETE_POST_ACTION,\n//     payload: postId,\n//   };\n// }\n\n// export function createPostAction(postData, history) {\n//   return (dispatch, getState) => {\n//     createPost(postData).then(response => {\n//       const singlePost = {\n//         ...postData,\n//         id: response.data.name,\n//       };\n//       dispatch(confirmedCreatePostAction(singlePost));\n//       history.push('/posts');\n//     });\n//   };\n// }\n\n// export function confirmedCreatePostAction(singlePost) {\n//   return {\n//     type: CONFIRMED_CREATE_POST_ACTION,\n//     payload: singlePost,\n//   };\n// }\n\n// export function confirmedUpdatePostAction(post) {\n//   return {\n//     type: CONFIRMED_EDIT_POST_ACTION,\n//     payload: post,\n//   };\n// }\n\n// export function updatePostAction(post, history) {\n//   return (dispatch, getState) => {\n//     updatePost(post, post.id).then(reponse => {\n//       dispatch(confirmedUpdatePostAction(post));\n//       history.push('/posts');\n//     });\n//   };\n// }\n"]},"metadata":{},"sourceType":"module"}